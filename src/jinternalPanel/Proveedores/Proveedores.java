/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package jinternalPanel.Proveedores;

import jinternalPanel.*;
import ClasesDAO.Ticket;
import ClasesDAO.accesoSistema;
import Utilerias.funciones;
import com.mysql.jdbc.PreparedStatement;
import conexion.conex;
import java.awt.Frame;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import jdialog.Cobrar_venta;
import jdialog.ReporteDiarioVentasDevoluciones;
import jdialog.catalogo_productos;
import java.util.Timer;
import java.util.TimerTask;
import jdialog.EditarCantidad;
import jdialog.EntradaEfectivo;
import jdialog.ProductoComun;
import jdialog.SalidasEfectivo;

/**
 *
 * @author desarrollo8
 */
public class Proveedores extends javax.swing.JInternalFrame implements KeyListener {    
   
    /**
     * Creates new form Ventas
     */
    public Proveedores() {
        initComponents();
        jtproductos.getColumnModel().getColumn(6).setMaxWidth(0);
        jtproductos.getColumnModel().getColumn(6).setMinWidth(0);
        jtproductos.getColumnModel().getColumn(6).setPreferredWidth(0);
        jtproductos.getColumnModel().getColumn(6).setWidth(0);
        cargarproveedor();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtproducto = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        tctproducto_agregar = new javax.swing.JTextField();
        idproducto = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtcantidad = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txtprecio = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        txtcodbar = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtproductos = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex) {
                return false; //Disallow the editing of any cell
            }
        };
        jltotal = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jlmonto = new javax.swing.JLabel();
        jButton9 = new javax.swing.JButton();
        jlgrantotal = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jcproveedor = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(249, 249, 249));
        setClosable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("MODULO DE COMPRAS");

        jPanel1.setBackground(new java.awt.Color(245, 244, 244));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 51, 204));
        jLabel1.setText("CÃ³digo del Producto:");

        txtproducto.addKeyListener(this);
        txtproducto.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        txtproducto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtproductoKeyPressed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/palomita.png"))); // NOI18N
        jButton1.setText("ENTER - Agregar Producto");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 51, 204));
        jLabel2.setText("Producto:");

        tctproducto_agregar.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tctproducto_agregar.setEnabled(false);

        idproducto.setVisible(false);

        jLabel4.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 51, 204));
        jLabel4.setText("Cantidad:");

        txtcantidad.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtcantidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtcantidadKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtcantidadKeyTyped(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/buscar.png"))); // NOI18N
        jButton3.setText("F10 Buscar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 51, 204));
        jLabel5.setText("Precio:");

        txtprecio.setEditable(true);
        txtprecio.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtprecio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtprecioKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtprecioKeyTyped(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/mas.png"))); // NOI18N
        jButton4.setText("Agregar Producto");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        txtcodbar.setVisible(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtproducto, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tctproducto_agregar, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(idproducto, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtcodbar, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtcantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtprecio, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtproducto)
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3))
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tctproducto_agregar)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtcantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtprecio, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(idproducto)
                    .addComponent(txtcodbar))
                .addGap(9, 9, 9)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));

        jtproductos.getTableHeader().setReorderingAllowed(false) ;
        jtproductos.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jtproductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CÃ³digo de Barras", "DescripciÃ³n del Producto", "Precio Compra", "Cant.", "Importe", "Existencia", "Id", "Descuento"
            }
        ));
        jtproductos.setRowHeight(24);
        jtproductos.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jtproductos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtproductosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtproductos);

        jltotal.setFont(new java.awt.Font("Arial", 0, 22)); // NOI18N
        jltotal.setForeground(new java.awt.Color(0, 51, 153));
        jltotal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jltotal.setText("0");

        jLabel3.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 51, 153));
        jLabel3.setText("Productos en la Compra actual.");

        jButton6.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        jButton6.setForeground(new java.awt.Color(51, 102, 0));
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/pagar.png"))); // NOI18N
        jButton6.setText("F12 - Pagar");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jlmonto.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jlmonto.setForeground(new java.awt.Color(0, 51, 153));
        jlmonto.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jlmonto.setText("$0.00");

        jButton9.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cancelar.png"))); // NOI18N
        jButton9.setText("Cancelar");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jlgrantotal.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jlgrantotal.setForeground(new java.awt.Color(0, 51, 153));
        jlgrantotal.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jlgrantotal.setText("$0.00");

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jButton2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/borrar.png"))); // NOI18N
        jButton2.setText("DEL Borrar Art.");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 12, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jcproveedor.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jcproveedor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecciona.." }));

        jLabel6.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 51, 204));
        jLabel6.setText("Proveedor:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jltotal, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 119, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(79, 79, 79)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jcproveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jlmonto, javax.swing.GroupLayout.DEFAULT_SIZE, 215, Short.MAX_VALUE)
                    .addComponent(jlgrantotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jlmonto, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jcproveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jltotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jlgrantotal))
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if(!txtproducto.getText().trim().equals("")){
            cargar_producto(txtproducto.getText().trim());
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtproductoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtproductoKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){ 
            if(!txtproducto.getText().trim().equals("")){
                cargar_producto(txtproducto.getText().trim());
            }
        }
    }//GEN-LAST:event_txtproductoKeyPressed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
        
         DefaultTableModel modelo=(DefaultTableModel) jtproductos.getModel();  
          int fila=-1;
          fila=jtproductos.getSelectedRow();
          if(fila!=-1){
              //int opc=JOptionPane.showConfirmDialog(null, "Â¿Estas seguro de eliminar?","Alerta",JOptionPane.INFORMATION_MESSAGE);
              //if(opc==JOptionPane.OK_OPTION){
                modelo.removeRow(fila);                
                //for(int i=fila; i<jtproductos.getRowCount(); i++){
                //    jtproductos.setValueAt(""+(i+1), i, 0);
                //}
              //}  
              
          }else{
            JOptionPane.showMessageDialog(null, "Seleccionar un producto de la tabla.","Alerta",JOptionPane.ERROR_MESSAGE);
         }
         cargar_informacion();
         
         ponerfocoenventa();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        vaciartabla();
        cargar_informacion();
        ponerfocoenventa();
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        Frame f = JOptionPane.getFrameForComponent(this);
        catalogo_productosProveedor dialog = new catalogo_productosProveedor(f, true);
        dialog.show();

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        
        cobrar_venta();
        
        
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jtproductosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtproductosMouseClicked
        // TODO add your handling code here:
        
         if (evt.getClickCount() == 2) {
             String producto=jtproductos.getValueAt(jtproductos.getSelectedRow(), 1).toString();
             String precio=jtproductos.getValueAt(jtproductos.getSelectedRow(), 2).toString();
             String cantidad=jtproductos.getValueAt(jtproductos.getSelectedRow(), 3).toString();             
             String existencia=jtproductos.getValueAt(jtproductos.getSelectedRow(), 5).toString();
             String idprod=jtproductos.getValueAt(jtproductos.getSelectedRow(), 6).toString();
             String descuento=jtproductos.getValueAt(jtproductos.getSelectedRow(), 7).toString();
             int fila=jtproductos.getSelectedRow();
             Frame f = JOptionPane.getFrameForComponent(this);
             EditarCantidad dialog = new EditarCantidad(f,true,fila,producto,cantidad,precio,existencia,idprod,"0","0");
             dialog.show();
         }
        
    }//GEN-LAST:event_jtproductosMouseClicked

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        agregarprodtabla();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void txtcantidadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcantidadKeyTyped
        // TODO add your handling code here:
         if(txtcantidad.getText().trim().length()>=9){
            //JOptionPane.showMessageDialog(null, "Solo acepta 15 caracteres", "Alerta", JOptionPane.ERROR_MESSAGE);
            evt.consume(); // ignorar el evento de teclado
        }else{
            if (((evt.getKeyChar() < '0') || (evt.getKeyChar() > '9')) && (evt.getKeyChar() != '.')){
               evt.consume(); // ignorar el evento de teclado
            }
        }
    }//GEN-LAST:event_txtcantidadKeyTyped

    private void txtprecioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtprecioKeyTyped
        // TODO add your handling code here:        
         if(txtprecio.getText().trim().length()>=9){
            //JOptionPane.showMessageDialog(null, "Solo acepta 15 caracteres", "Alerta", JOptionPane.ERROR_MESSAGE);
            evt.consume(); // ignorar el evento de teclado
        }else{
            if (((evt.getKeyChar() < '0') || (evt.getKeyChar() > '9')) && (evt.getKeyChar() != '.')){
               evt.consume(); // ignorar el evento de teclado
            }
        }
    }//GEN-LAST:event_txtprecioKeyTyped

    private void txtprecioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtprecioKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){ 
            agregarprodtabla();
        }
    }//GEN-LAST:event_txtprecioKeyPressed

    private void txtcantidadKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcantidadKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){ 
            agregarprodtabla();
        }
    }//GEN-LAST:event_txtcantidadKeyPressed

     public static void vaciartabla(){
        DefaultTableModel modelo=(DefaultTableModel) jtproductos.getModel();         
            for (int i = 0; i < jtproductos.getRowCount(); i++) {
                modelo.removeRow(i);
                i-=1;
            }    
           
    }  
    public static void cargar_producto(String producto_code){
        DefaultTableModel modelo=(DefaultTableModel) jtproductos.getModel();          
        String codigo_barras=producto_code;
        conex con=new conex();          
        ResultSet rs = null;       
        String myQuery = "SELECT * FROM tc_productos WHERE codigo_barras='"+codigo_barras+"' and estatus=1";
        System.out.println(""+myQuery);
        try {  
            Statement st = con.getConnection().createStatement();
            rs = st.executeQuery(myQuery);
            float precio=0;
            String codigobarra="",producto="";
            int existencia=0;
            String id="";
            boolean existe=false;
            if(rs.next()) {                                 
                codigobarra=rs.getString("codigo_barras");
                producto=rs.getString("nombre_producto");                
                id=rs.getString("idproducto");
                precio=rs.getFloat("precio_compra");
                existe=true;
                //modelo.addRow(new Object[]{rs.getString("codigo_barras"),rs.getString("nombre_producto"),rs.getString("precio_venta"),"1","10",rs.getString("existencia")});
            }
            rs.close(); 
            st.close();
            con.desconectar();   
            
            
            
            if(existe){
                txtcodbar.setText(codigo_barras);
                idproducto.setText(id);
                tctproducto_agregar.setText(producto);
                txtprecio.setText(precio+"");
                txtcantidad.requestFocus();
            }else{                
                txtproducto.requestFocus();
                JOptionPane.showMessageDialog(null, "No existe ese codigo de barras. ", "Error", JOptionPane.ERROR_MESSAGE);
            }
             
        } catch (SQLException ex) {
        }
        
        jtproductos.getColumnModel().getColumn(6).setMaxWidth(0);
        jtproductos.getColumnModel().getColumn(6).setMinWidth(0);
        jtproductos.getColumnModel().getColumn(6).setPreferredWidth(0);
        jtproductos.getColumnModel().getColumn(6).setWidth(0);
        
        txtproducto.setText("");        
        
    }
    
    
    
    public static void cargar_productobusqueda(String producto_code){
        DefaultTableModel modelo=(DefaultTableModel) jtproductos.getModel();          
        String codigo_barras=producto_code;
        conex con=new conex();          
        ResultSet rs = null;       
        String myQuery = "SELECT * FROM tc_productos WHERE idproducto='"+codigo_barras+"' and estatus=1"; //el estatus es producto comun
        System.out.println(""+myQuery);
        try {  
            Statement st = con.getConnection().createStatement();
            rs = st.executeQuery(myQuery);
            float precio=0;
            String codigobarra="",producto="";
            int existencia=0;
            String id="";
            boolean existe=false;
            if(rs.next()) {                 
                precio=rs.getFloat("precio_venta");
                codigobarra=rs.getString("codigo_barras");
                producto=rs.getString("nombre_producto");                
                id=rs.getString("idproducto");
                precio=rs.getFloat("precio_compra");
                existe=true;
                //modelo.addRow(new Object[]{rs.getString("codigo_barras"),rs.getString("nombre_producto"),rs.getString("precio_venta"),"1","10",rs.getString("existencia")});
            }
            rs.close(); 
            st.close();
            con.desconectar();   
            
            if(existe){                
                txtcodbar.setText(codigobarra);
                idproducto.setText(id);
                tctproducto_agregar.setText(producto);
                txtprecio.setText(""+precio);
                txtcantidad.requestFocus();
            }else{                
                txtproducto.requestFocus();
                JOptionPane.showMessageDialog(null, "No existe ese codigo de barras. ", "Error", JOptionPane.ERROR_MESSAGE);
            }
             
        } catch (SQLException ex) {
        }
        
        jtproductos.getColumnModel().getColumn(6).setMaxWidth(0);
        jtproductos.getColumnModel().getColumn(6).setMinWidth(0);
        jtproductos.getColumnModel().getColumn(6).setPreferredWidth(0);
        jtproductos.getColumnModel().getColumn(6).setWidth(0);
        
        txtproducto.setText("");
        cargar_informacion();
        
    }
    
    
    
    
    public static void cargar_informacion(){
       double total_valor=0;
       int total=0;
       for(int fila=0; fila<jtproductos.getRowCount(); fila++){
               
                total_valor=total_valor+Float.parseFloat(jtproductos.getValueAt(fila, 4).toString());
                //System.out.println(""+total_valor);
                total++;
       }
       //DecimalFormat df = new DecimalFormat("0.00"); 
       //jlmonto.setText("$ "+df.format(total_valor)+"");       
       
       funciones redondear=new funciones();
       total_valor=redondear.redondearDecimales(total_valor, 2);
       jlmonto.setText("$ "+total_valor+"");       
       jltotal.setText(total+"");
       double montototal=total_valor+(total_valor*obteniva());
       montototal=redondear.redondearDecimales(montototal, 2);
       
       jlgrantotal.setText("$ "+montototal+"");  
       
       
       
   } 


public void cobrar_venta(){

    int numprod=jtproductos.getRowCount();
    if(numprod>0){
        ArrayList productos=new ArrayList();
        for(int fila=0; fila<jtproductos.getRowCount(); fila++){
               //id    codigobarras   precioventa   cantidad   totalprod  descriprod
               productos.add(jtproductos.getValueAt(fila, 6).toString()+"@"+jtproductos.getValueAt(fila, 0).toString()+"@"+jtproductos.getValueAt(fila, 2).toString()+"@"+jtproductos.getValueAt(fila, 3).toString()+"@"+jtproductos.getValueAt(fila, 4).toString()+"@"+jtproductos.getValueAt(fila, 1).toString());               
       }
        
        int cant=jlmonto.getText().trim().length();
        String monto=jlmonto.getText().trim().substring(1, cant); //se quita el caracter $        
        double monto_final=Float.parseFloat(monto);
        Frame f = JOptionPane.getFrameForComponent(this);
        double iva=obteniva();
        double subtotal=monto_final;
        monto_final=monto_final+(monto_final*iva);
        
        funciones redondear=new funciones();
        monto_final=redondear.redondearDecimales(monto_final, 2);
        
        //monto_final=Math.rint((monto_final*1000)/1000);//redondea los numeros
        
        //Cobrar_venta venta=new Cobrar_venta(f,true,monto_final,productos,subtotal);
        //venta.show();
        
        float pagoefec=Float.parseFloat(subtotal+"");
        cobrar_compra cobro=new cobrar_compra();
        String proveedor=jcproveedor.getSelectedItem().toString();
        boolean exito=cobro.cobrarCompra(subtotal,pagoefec,"","EFECTIVO",productos,"MANDAIMPRIMIR",0.0,"","",proveedor);                
        if(exito==true){
            vaciartabla();
            cargar_informacion();            
        }
                    
    }else{
        JOptionPane.showMessageDialog(null, "No hay productos en la venta. ", "Error al registrar venta", JOptionPane.ERROR_MESSAGE);
        ponerfocoenventa();
    }

}    

public void ponerfocoenventa(){
    txtproducto.requestFocus();
    
}

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JTextField idproducto;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> jcproveedor;
    private static javax.swing.JLabel jlgrantotal;
    private static javax.swing.JLabel jlmonto;
    private static javax.swing.JLabel jltotal;
    public static javax.swing.JTable jtproductos;
    private static javax.swing.JTextField tctproducto_agregar;
    private static javax.swing.JTextField txtcantidad;
    private static javax.swing.JTextField txtcodbar;
    private static javax.swing.JTextField txtprecio;
    public static javax.swing.JTextField txtproducto;
    // End of variables declaration//GEN-END:variables

    
    public void keyPressed(KeyEvent e) {      
    if (e.VK_F10==e.getKeyCode())
    {
        Frame f = JOptionPane.getFrameForComponent(this);
        catalogo_productosProveedor dialog = new catalogo_productosProveedor(f, true);
        dialog.show();
    }
    
    if (e.VK_F12==e.getKeyCode())
    {
        cobrar_venta();
    }
    
   }


    
    @Override
    public void keyTyped(KeyEvent e) {        
    }

    @Override
    public void keyReleased(KeyEvent e) {
    if (e.getSource()==txtproducto)
    {
        if (e.VK_ESCAPE==e.getKeyCode())
        {
            
        }
    }        
    }
    
    public static double obteniva(){
    double iva=0.0;    
    conex cn = new conex();    
    String sql="SELECT parametro from to_parametros where clave='IVA'";
    System.out.println(sql);
    PreparedStatement pstm100;
    try {
            pstm100 = (PreparedStatement) cn.getConnection().prepareStatement(sql);
            ResultSet rs100 = (ResultSet) pstm100.executeQuery();
        while (rs100.next()) {

            iva=rs100.getDouble("parametro");	    		    			   
            }
        rs100.close();
        pstm100.close();
        cn.desconectar();
    } catch (SQLException e2) {
            // TODO Auto-generated catch block
            e2.printStackTrace();
    }
    iva=iva/100;
    return iva;
    }


    public void agregarprodtabla(){  
        String codigobar=txtcodbar.getText().trim();
        String idprodcuto=idproducto.getText().trim();
        String descip=tctproducto_agregar.getText().trim();
        String cantidad=txtcantidad.getText().trim();
        String precio=txtprecio.getText().trim();
        if(idprodcuto.equals("")){
            txtproducto.requestFocus();
            JOptionPane.showMessageDialog(null, "Falta agregar un producto. ", "Error al agregar producto", JOptionPane.ERROR_MESSAGE);
        }else if(cantidad.equals("")){
            txtcantidad.requestFocus();
            JOptionPane.showMessageDialog(null, "Falta ingresar la cantidad. ", "Error al agregar producto", JOptionPane.ERROR_MESSAGE);
        }else if(precio.equals("")){
            txtprecio.requestFocus();
            JOptionPane.showMessageDialog(null, "Falta ingresar el precio de compra. ", "Error al agregar producto", JOptionPane.ERROR_MESSAGE);
        }else{
            DefaultTableModel modelo=(DefaultTableModel) jtproductos.getModel();         
            double montototal=Double.parseDouble(precio)*Double.parseDouble((cantidad));
            funciones redondear=new funciones();
            montototal=redondear.redondearDecimales(montototal, 2);
            modelo.addRow(new Object[]{codigobar,descip,precio,cantidad,montototal+"","",idprodcuto,""});    

            jtproductos.getColumnModel().getColumn(5).setMaxWidth(0);
            jtproductos.getColumnModel().getColumn(5).setMinWidth(0);
            jtproductos.getColumnModel().getColumn(5).setPreferredWidth(0);
            jtproductos.getColumnModel().getColumn(5).setWidth(0);

            jtproductos.getColumnModel().getColumn(6).setMaxWidth(0);
            jtproductos.getColumnModel().getColumn(6).setMinWidth(0);
            jtproductos.getColumnModel().getColumn(6).setPreferredWidth(0);
            jtproductos.getColumnModel().getColumn(6).setWidth(0);

            jtproductos.getColumnModel().getColumn(7).setMaxWidth(0);
            jtproductos.getColumnModel().getColumn(7).setMinWidth(0);
            jtproductos.getColumnModel().getColumn(7).setPreferredWidth(0);
            jtproductos.getColumnModel().getColumn(7).setWidth(0);        
            cargar_informacion();  
            limpiarformulario();
            txtproducto.requestFocus();
        }
    }

    public static void limpiarformulario(){
      txtcodbar.setText("");
      idproducto.setText("");
      tctproducto_agregar.setText("");
      txtcantidad.setText("");
      txtprecio.setText("");
    }


    public void cargarproveedor() {
        jcproveedor.removeAllItems();
        jcproveedor.addItem("Selecciona..");     
        conex con = new conex();
        ResultSet rs = null;
        String myQuery = "SELECT * from proveedor_tc where estatus_proveedor=1";

        try {
            Statement st = con.getConnection().createStatement();
            rs = st.executeQuery(myQuery);
            while (rs.next()) {
                jcproveedor.addItem(rs.getString("IdProveedor") + "-" + rs.getString("nombreProveedor"));
            }
            rs.close();
            st.close();
            con.desconectar();
        } catch (SQLException ex) {
        }

    }

    
}
