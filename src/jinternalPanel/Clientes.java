/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jinternalPanel;
import javax.swing.event.DocumentListener;
import ClasesDAO.accesoSistema;
import ModuloVeterinaria.CatPaciente;
import ModuloVeterinaria.CatPacientes;
import conexion.conex;
import java.awt.Frame;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import jdialog.AbonarCliente;
import jdialog.DetalleAbono;
import jdialog.EditarCliente;
import jdialog.NuevoCliente;
/**
 *
 * @author JOSE
 */
public class Clientes extends javax.swing.JInternalFrame {
private static TableRowSorter<TableModel> sorter;
    /**
     * Creates new form Clientes
     */
    public Clientes() {
        initComponents();
        cargartabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jtclientes = new javax.swing.JTable();
        txtBusqueda = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtcliente = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtmontoadeudo = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtfolios = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtproductos = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        txtidcliente = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();

        setBackground(new java.awt.Color(248, 246, 246));
        setTitle("Catálogo de Clientes");

        jtclientes.getTableHeader().setReorderingAllowed(false);
        jtclientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Nombre", "Teléfono", "RFC", "Correo", "Código Barras", "Puntos"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtclientes.setRowHeight(24);
        jtclientes.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jtclientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtclientesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtclientes);

        txtBusqueda.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txtBusqueda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBusquedaKeyPressed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 51, 204));
        jLabel1.setText("Buscar Cliente:");

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/edit.png"))); // NOI18N
        jButton1.setText("Editar Cliente");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/mas.png"))); // NOI18N
        jButton2.setText("Nuevo Cliente");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(250, 248, 248));
        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 153, 51));
        jLabel2.setText("ESTADO DE CUENTA");

        txtcliente.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Arial", 1, 17)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 153, 51));
        jLabel3.setText("Saldo Actual:");

        txtmontoadeudo.setFont(new java.awt.Font("Arial", 0, 22)); // NOI18N
        txtmontoadeudo.setForeground(new java.awt.Color(0, 204, 0));

        jtfolios.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtfolios.getTableHeader().setReorderingAllowed(false) ;
        jtfolios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Folio", "Monto", "Fecha", "Usuario"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtfolios.setRowHeight(22);
        jtfolios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtfoliosMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jtfolios);

        jtproductos.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtproductos.getTableHeader().setReorderingAllowed(false) ;
        jtproductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Producto", "Cantidad", "Monto"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtproductos.setRowHeight(22);
        jScrollPane3.setViewportView(jtproductos);

        jButton3.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/dinero.png"))); // NOI18N
        jButton3.setText("Abonar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Icono_libro.png"))); // NOI18N
        jButton4.setText("Detalle Abonos");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        txtidcliente.setVisible(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtcliente, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtidcliente, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtmontoadeudo, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                    .addComponent(txtcliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtidcliente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtmontoadeudo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton4)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/borrar.png"))); // NOI18N
        jButton5.setText("Eliminar");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/mascota.png"))); // NOI18N
        jButton6.setText("Pacientes");
        if(accesoSistema.menuveterinaria.equals("0")){
            jButton6.setVisible(false);
        }
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addGap(4, 4, 4)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtBusquedaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBusquedaKeyPressed
        // TODO add your handling code here:
        txtBusqueda.getDocument().addDocumentListener(new DocumentListener(){
            @Override
            public void insertUpdate(DocumentEvent e) {
                filtrar();
            }
            @Override
            public void removeUpdate(DocumentEvent e) {
                filtrar();
            }
            @Override
            public void changedUpdate(DocumentEvent e) {
                filtrar();
            }
        });
    }//GEN-LAST:event_txtBusquedaKeyPressed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        Frame f = JOptionPane.getFrameForComponent(this);
        NuevoCliente venta=new NuevoCliente(f,true);
        venta.show();
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int fila=-1;
        fila=jtclientes.getSelectedRow();
        if(fila!=-1){
            String id=jtclientes.getValueAt(jtclientes.getSelectedRow(),0).toString();
            Frame f = JOptionPane.getFrameForComponent(this);
            EditarCliente venta=new EditarCliente(f,true,id);
            venta.show();

        }else{
            JOptionPane.showMessageDialog(null,"Seleccione un Cliente de la Tabla","Alerta",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jtfoliosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtfoliosMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 1) {
            String folio=jtfolios.getValueAt(jtfolios.getSelectedRow(), 1).toString();
            String monto=jtfolios.getValueAt(jtfolios.getSelectedRow(), 2).toString();
            String cajero=jtfolios.getValueAt(jtfolios.getSelectedRow(), 4).toString();            
            cargartablaproductos(folio);
        }
    }//GEN-LAST:event_jtfoliosMouseClicked

    private void jtclientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtclientesMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
            int fila=-1;
            fila=jtclientes.getSelectedRow();
            if(fila!=-1){
                String id=jtclientes.getValueAt(jtclientes.getSelectedRow(),0).toString();
                txtidcliente.setText(id);
                txtcliente.setText(jtclientes.getValueAt(jtclientes.getSelectedRow(),1).toString()+"");
                cargartablafolios(id);
                vaciartablaprod();
            }               
        }
    }//GEN-LAST:event_jtclientesMouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        if(!txtidcliente.getText().trim().equals("")){
            Frame f = JOptionPane.getFrameForComponent(this);
            AbonarCliente abonar=new AbonarCliente(f,true,txtidcliente.getText().trim());
            abonar.show();
        }else{
            JOptionPane.showMessageDialog(null, "Debe seleccionar a un cliente.", "Alerta", JOptionPane.ERROR_MESSAGE);        
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        if(!txtidcliente.getText().trim().equals("")){
            Frame f = JOptionPane.getFrameForComponent(this);
            DetalleAbono abonar=new DetalleAbono(f,true,txtidcliente.getText().trim(),txtcliente.getText());
            abonar.show();
        }else{
            JOptionPane.showMessageDialog(null, "Debe seleccionar a un cliente.", "Alerta", JOptionPane.ERROR_MESSAGE);        
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        int fila=-1;
            fila=jtclientes.getSelectedRow();
            if(fila!=-1){
                int opc=JOptionPane.showConfirmDialog(null, "¿Estas seguro de eliminar?","Alerta",JOptionPane.INFORMATION_MESSAGE);
                if(opc==JOptionPane.OK_OPTION){
                    String id=jtclientes.getValueAt(jtclientes.getSelectedRow(),0).toString();
                    conex con=new conex();                                               
                    try {
                        String myQuery = "update tc_clientes set estatus=0 where idcliente='"+id+"'";
                        Statement st = con.getConnection().createStatement();
                        st.executeUpdate(myQuery);
                        st.close();
                        con.desconectar();
                        cargartabla();
                        JOptionPane.showMessageDialog(null, "El cliente se elimino correctamente. ", "Cliente eliminado", JOptionPane.PLAIN_MESSAGE);
                    } catch (SQLException ex) {       

                        JOptionPane.showMessageDialog(null, "Error al obtener los datos: "+ex, "Error", JOptionPane.ERROR_MESSAGE);
                    }   
                    
                }
            }else{
                JOptionPane.showMessageDialog(null,"Seleccione un cliente de la Tabla","Alerta",JOptionPane.ERROR_MESSAGE);
            }
        
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        int fila=-1;
        fila=jtclientes.getSelectedRow();
        if(fila!=-1){
            String id=jtclientes.getValueAt(jtclientes.getSelectedRow(),0).toString();
            String cliente=jtclientes.getValueAt(jtclientes.getSelectedRow(),1).toString();
            Frame f = JOptionPane.getFrameForComponent(this);
            CatPaciente pacientes=new CatPaciente(f,true,id,cliente);
            pacientes.show();

        }else{
            JOptionPane.showMessageDialog(null,"Seleccione un Cliente de la Tabla","Alerta",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton6ActionPerformed


    private void filtrar() {
        
         RowFilter<TableModel, Object> rf = null;
        try {
            rf = RowFilter.regexFilter("(?i)"+txtBusqueda.getText(),1,2);
        }catch (java.util.regex.PatternSyntaxException e) {
        }
        sorter.setRowFilter(rf);
    }


 public static void vaciartabla(){
            DefaultTableModel modelo=(DefaultTableModel) jtclientes.getModel();         
            for (int i = 0; i < jtclientes.getRowCount(); i++) {
                modelo.removeRow(i);
                i-=1;
            }    
    }
    
public static void cargartabla(){    
        vaciartabla();
        DefaultTableModel modelo=(DefaultTableModel) jtclientes.getModel();  
        conex con=new conex();   
        ResultSet rsR = null;        
        String myQuery = "select * from tc_clientes where estatus=1";
               //System.out.println(""+myQuery);
               try {
                   Statement st = con.getConnection().createStatement();
                   rsR = st.executeQuery(myQuery);
                   while(rsR.next()) {                                                
                            modelo.addRow(new Object[]{rsR.getString("idcliente"),rsR.getString("nombre_completo"),rsR.getString("telefono"),rsR.getString("rfc"),rsR.getString("email"),rsR.getString("codigo_barras"),rsR.getString("puntos")});                        
                   }
                   sorter = new TableRowSorter<TableModel>(modelo);
                   jtclientes.setRowSorter(sorter);
                   rsR.close(); 
                   st.close();
                   con.desconectar();
               } catch (SQLException ex) {       
                  
                   JOptionPane.showMessageDialog(null, "Error al obtener los datos: "+ex, "Error", JOptionPane.ERROR_MESSAGE);
               }     
               
              
    }    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    public static javax.swing.JTable jtclientes;
    public static javax.swing.JTable jtfolios;
    public static javax.swing.JTable jtproductos;
    private static javax.swing.JTextField txtBusqueda;
    private javax.swing.JLabel txtcliente;
    private javax.swing.JTextField txtidcliente;
    public static javax.swing.JLabel txtmontoadeudo;
    // End of variables declaration//GEN-END:variables


    public static void vaciartablafolios(){
            DefaultTableModel modelo=(DefaultTableModel) jtfolios.getModel();         
            for (int i = 0; i < jtfolios.getRowCount(); i++) {
                modelo.removeRow(i);
                i-=1;
            }    
    }
    public static void cargartablafolios(String idcliente){    
        vaciartablafolios();        
        DefaultTableModel modelo=(DefaultTableModel) jtfolios.getModel();  
        conex con=new conex();   
        ResultSet rsR = null;        
        String myQuery = "select idfolio, no_folio, (monto_total+iva) as monto_total, fecha_movimiento,usuario_registro from to_folios, th_cliente_credito where estatus=1 and tipo_movimiento='VENTA' and idrfolio=no_folio and idrcliente="+idcliente;
               System.out.println(""+myQuery);
               try {
                   Statement st = con.getConnection().createStatement();
                   rsR = st.executeQuery(myQuery);
                   while(rsR.next()) {                                                
                            double montototal=Math.rint((rsR.getDouble("monto_total")*1000)/1000);//redondea los numeros
                            modelo.addRow(new Object[]{rsR.getString("idfolio"),rsR.getString("no_folio"),montototal,rsR.getString("fecha_movimiento"),rsR.getString("usuario_registro")});                        
                   } 
                   double montodeuda=0,montopagado=0,diferencia=0;
                   
                   myQuery="select sum(monto_total+iva) as deuda from to_folios, th_cliente_credito where estatus=1 and tipo_movimiento='VENTA' and idrfolio=no_folio and idrcliente="+idcliente;
                   rsR = st.executeQuery(myQuery);
                   while(rsR.next()) {                                 
                           montodeuda=rsR.getDouble("deuda");
                   }
                   myQuery="select sum(Monto) as pagado from th_abonos_cliente where idrCliente="+idcliente;
                   rsR = st.executeQuery(myQuery);
                   while(rsR.next()) {          
                       montopagado=rsR.getDouble("pagado");
                   }
                   diferencia=montodeuda-montopagado;
                   diferencia=Math.rint((diferencia*1000)/1000);//redondea los numeros
                   txtmontoadeudo.setText("$"+diferencia);
                   rsR.close(); 
                   st.close();
                   con.desconectar();
               } catch (SQLException ex) {       
                  
                   JOptionPane.showMessageDialog(null, "Error al obtener los datos: "+ex, "Error", JOptionPane.ERROR_MESSAGE);
               }     
               
            jtfolios.getColumnModel().getColumn(0).setMaxWidth(0);
            jtfolios.getColumnModel().getColumn(0).setMinWidth(0);
            jtfolios.getColumnModel().getColumn(0).setPreferredWidth(0);
            jtfolios.getColumnModel().getColumn(0).setWidth(0); 
    }    

    public static void vaciartablaprod(){
            DefaultTableModel modelo=(DefaultTableModel) jtproductos.getModel();         
            for (int i = 0; i < jtproductos.getRowCount(); i++) {
                modelo.removeRow(i);
                i-=1;
            }    
    }
        public void cargartablaproductos(String folio){    
            vaciartablaprod();
            DefaultTableModel modelo=(DefaultTableModel) jtproductos.getModel();  
            conex con=new conex();   
            ResultSet rsR = null;        
            String myQuery = "select idventa,to_ventas.idproducto,cantidad,total,nombre_producto from to_ventas,tc_productos where to_ventas.idproducto=tc_productos.idproducto and folio='"+folio+"'";
               System.out.println(""+myQuery);
               try {
                   Statement st = con.getConnection().createStatement();
                   rsR = st.executeQuery(myQuery);
                   while(rsR.next()) {                                                
                            modelo.addRow(new Object[]{rsR.getString("idventa"),rsR.getString("nombre_producto"),rsR.getString("cantidad"),rsR.getString("total")});                        
                   }                                      
                   rsR.close(); 
                   st.close();
                   con.desconectar();
               } catch (SQLException ex) {       
                  
                   JOptionPane.showMessageDialog(null, "Error al obtener los datos: "+ex, "Error", JOptionPane.ERROR_MESSAGE);
               }     
        jtproductos.getColumnModel().getColumn(0).setMaxWidth(0);
        jtproductos.getColumnModel().getColumn(0).setMinWidth(0);
        jtproductos.getColumnModel().getColumn(0).setPreferredWidth(0);
        jtproductos.getColumnModel().getColumn(0).setWidth(0);
              
    }    
    
}
