/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package jinternalPanel;

import ClasesDAO.Ticket;
import ClasesDAO.accesoSistema;
import ClasesDAO.cobrar_ventafinal;
import com.mysql.jdbc.PreparedStatement;
import conexion.conex;
import java.awt.Frame;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import jdialog.Cobrar_venta;
import jdialog.ReporteDiarioVentasDevoluciones;
import jdialog.catalogo_productos;
import java.util.Timer;
import java.util.TimerTask;
//import jdialog.CobrarCajaInicial;
import jdialog.EditarCantidad;
import jdialog.EditarCantidadCotizacion;
import jdialog.catalogo_Clientes;
import jdialog.catalogo_productosCoti;

/**
 *
 * @author desarrollo8
 */
public class Cotizacion extends javax.swing.JInternalFrame implements KeyListener {    
   
    /**
     * Creates new form Ventas
     */
    public Cotizacion() {
        initComponents();
        jtproductoscoti.getColumnModel().getColumn(6).setMaxWidth(0);
        jtproductoscoti.getColumnModel().getColumn(6).setMinWidth(0);
        jtproductoscoti.getColumnModel().getColumn(6).setPreferredWidth(0);
        jtproductoscoti.getColumnModel().getColumn(6).setWidth(0);
        cargar_clientes();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtproductocoti = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jctipoventacoti = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jcclientecoti = new javax.swing.JComboBox<>();
        jButton11 = new javax.swing.JButton();
        jcmenudeo = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtproductoscoti = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex) {
                return false; //Disallow the editing of any cell
            }
        };
        jltotal = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jlmonto = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();

        setBackground(new java.awt.Color(249, 249, 249));
        setClosable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("GENERAR COTIZACIÓN");

        jPanel1.setBackground(new java.awt.Color(230, 252, 230));

        jLabel1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 51, 204));
        jLabel1.setText("Código del Producto:");

        txtproductocoti.addKeyListener(this);
        txtproductocoti.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txtproductocoti.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtproductocotiKeyPressed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/palomita.png"))); // NOI18N
        jButton1.setText("ENTER - Agregar Producto");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jButton2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/borrar.png"))); // NOI18N
        jButton2.setText("DEL Borrar Art.");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/buscar.png"))); // NOI18N
        jButton3.setText("F10 Buscar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setVisible(false);
        jButton4.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/salida.png"))); // NOI18N
        jButton4.setText("Salidas");

        jButton5.setVisible(false);
        jButton5.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/entrada.png"))); // NOI18N
        jButton5.setText("Entradas");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(411, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel2.setVisible(false);
        jLabel2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 51, 204));
        jLabel2.setText("Tipo de Venta:");

        jctipoventacoti.setVisible(false);
        jctipoventacoti.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jctipoventacoti.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecciona..", "Ticket", "Factura" }));

        jLabel4.setVisible(false);
        jLabel4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 51, 204));
        jLabel4.setText("Cliente:");

        jcclientecoti.setVisible(false);
        jcclientecoti.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jcclientecoti.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecciona.." }));

        jButton11.setVisible(false);
        jButton11.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jButton11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/buscar.png"))); // NOI18N
        jButton11.setText("Buscar");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jcmenudeo.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jcmenudeo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MENUDEO", "MAYOREO" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtproductocoti, javax.swing.GroupLayout.DEFAULT_SIZE, 325, Short.MAX_VALUE)
                    .addComponent(jctipoventacoti, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jcclientecoti, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jcmenudeo, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(177, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jctipoventacoti))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jcclientecoti)
                    .addComponent(jButton11))
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jcmenudeo, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtproductocoti, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jtproductoscoti.getTableHeader().setReorderingAllowed(false) ;
        jtproductoscoti.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jtproductoscoti.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código de Barras", "Descripción del Producto", "Precio Venta", "Cant.", "Importe", "Existencia", "Id", "Descuento"
            }
        ));
        jtproductoscoti.setRowHeight(24);
        jtproductoscoti.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jtproductoscoti.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtproductoscotiMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtproductoscoti);

        jltotal.setFont(new java.awt.Font("Arial", 0, 22)); // NOI18N
        jltotal.setForeground(new java.awt.Color(0, 51, 153));
        jltotal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jltotal.setText("0");

        jLabel3.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 51, 153));
        jLabel3.setText("Productos en cotización actual.");

        jButton6.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        jButton6.setForeground(new java.awt.Color(51, 102, 0));
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/pagar.png"))); // NOI18N
        jButton6.setText("F12 - Cotizar");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jlmonto.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jlmonto.setForeground(new java.awt.Color(0, 51, 153));
        jlmonto.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jlmonto.setText("$0.00");

        jButton7.setVisible(false);
        jButton7.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/historico.png"))); // NOI18N
        jButton7.setText("Ventas del día y devoluciones");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        if(accesoSistema.licencia.equals("DEMO")){
            jButton8.setVisible(false);
        }
        jButton8.setVisible(false);
        jButton8.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/impresora.png"))); // NOI18N
        jButton8.setText("Reimprimir Último Ticket");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cancelar.png"))); // NOI18N
        jButton9.setText("Cancelar");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setVisible(false);
        jButton10.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jButton10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/seg.png"))); // NOI18N
        jButton10.setText("Generar Cotización");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jltotal, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(79, 79, 79)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jlmonto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton7))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jltotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jlmonto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                    .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if(!txtproductocoti.getText().trim().equals("")){
            cargar_producto(txtproductocoti.getText().trim());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtproductocotiKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtproductocotiKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){  
            if(!txtproductocoti.getText().trim().equals("")){
                cargar_producto(txtproductocoti.getText().trim());
            }
        }
    }//GEN-LAST:event_txtproductocotiKeyPressed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
        
         DefaultTableModel modelo=(DefaultTableModel) jtproductoscoti.getModel();  
          int fila=-1;
          fila=jtproductoscoti.getSelectedRow();
          if(fila!=-1){
              //int opc=JOptionPane.showConfirmDialog(null, "¿Estas seguro de eliminar?","Alerta",JOptionPane.INFORMATION_MESSAGE);
              //if(opc==JOptionPane.OK_OPTION){
                modelo.removeRow(fila);                
                //for(int i=fila; i<jtproductos.getRowCount(); i++){
                //    jtproductos.setValueAt(""+(i+1), i, 0);
                //}
              //}  
              
          }else{
            JOptionPane.showMessageDialog(null, "Seleccionar un producto de la tabla.","Alerta",JOptionPane.ERROR_MESSAGE);
         }
         cargar_informacion();
         ponerfocoenventa();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        vaciartabla();
        cargar_informacion();
        ponerfocoenventa();
        jctipoventacoti.setSelectedIndex(0);
        jcclientecoti.setSelectedIndex(0);
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        Frame f = JOptionPane.getFrameForComponent(this);
        catalogo_productosCoti dialog = new catalogo_productosCoti(f, true);
        dialog.show();

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        /*if(jctipoventacoti.getSelectedItem().toString().equals("Selecciona..")){            
            JOptionPane.showMessageDialog(null, "Falta seleccionar el tipo de venta.", "Alerta", JOptionPane.ERROR_MESSAGE);                
        }else{
            Frame f = JOptionPane.getFrameForComponent(this);
            CobrarCajaInicial dialog = new CobrarCajaInicial(f, true);
            dialog.show();             
            //cobrar_venta();
        }
        */
        cotizacion_venta();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:        
        String folio="0";
        conex cn = new conex();
	String sql="SELECT parametro from to_parametros where clave='FOLIO'";
	System.out.println(sql);
	PreparedStatement pstm100;
	try {
		pstm100 = (PreparedStatement) cn.getConnection().prepareStatement(sql);
		ResultSet rs100 = (ResultSet) pstm100.executeQuery();
	    while (rs100.next()) {	    	
	    	folio=rs100.getString("parametro");	    		    			   
		}
	    rs100.close();
            pstm100.close();
            cn.desconectar();
	} catch (SQLException e2) {
		// TODO Auto-generated catch block
		e2.printStackTrace();
	}
        int folios=Integer.parseInt(folio);
        folios=folios-1;
        
        Ticket imprime=new Ticket();
        imprime.ReImprimirDocumento(folio);
        ponerfocoenventa();
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        Frame f = JOptionPane.getFrameForComponent(this);
        ReporteDiarioVentasDevoluciones reportediario=new ReporteDiarioVentasDevoluciones(f,true);
        reportediario.show();
        
        
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        ponerfocoenventa();
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        Frame f = JOptionPane.getFrameForComponent(this);
        catalogo_Clientes dialog = new catalogo_Clientes(f, true);
        dialog.show();
        
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jtproductoscotiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtproductoscotiMouseClicked
        // TODO add your handling code here:
        
        if (evt.getClickCount() == 2) {
             String producto=jtproductoscoti.getValueAt(jtproductoscoti.getSelectedRow(), 1).toString();
             String precio=jtproductoscoti.getValueAt(jtproductoscoti.getSelectedRow(), 2).toString();
             String cantidad=jtproductoscoti.getValueAt(jtproductoscoti.getSelectedRow(), 3).toString();             
             String existencia=jtproductoscoti.getValueAt(jtproductoscoti.getSelectedRow(), 5).toString();
             String descuento=jtproductoscoti.getValueAt(jtproductoscoti.getSelectedRow(), 7).toString();
             String id=jtproductoscoti.getValueAt(jtproductoscoti.getSelectedRow(), 6).toString();
             int fila=jtproductoscoti.getSelectedRow();
             Frame f = JOptionPane.getFrameForComponent(this);
             EditarCantidadCotizacion dialog = new EditarCantidadCotizacion(f,true,fila,producto,cantidad,precio,existencia,descuento,id);
             dialog.show();
         }
        
    }//GEN-LAST:event_jtproductoscotiMouseClicked

     public static void vaciartabla(){
        DefaultTableModel modelo=(DefaultTableModel) jtproductoscoti.getModel();         
            for (int i = 0; i < jtproductoscoti.getRowCount(); i++) {
                modelo.removeRow(i);
                i-=1;
            } 
            
    }  
     
     public static void cargar_cliente(String cliente){
         jcclientecoti.setSelectedItem(cliente);
     }
    public static void cargar_producto(String producto_code){
        DefaultTableModel modelo=(DefaultTableModel) jtproductoscoti.getModel();          
        String codigo_barras=producto_code;
        conex con=new conex();          
        ResultSet rs = null;       
        String myQuery = "SELECT * FROM tc_productos WHERE (codigo_barras='"+codigo_barras+"') and estatus=1";
        System.out.println(""+myQuery);
        try {  
            Statement st = con.getConnection().createStatement();
            rs = st.executeQuery(myQuery);
            float precio=0;
            String codigobarra="",producto="";
            int existencia=0;
            String id="";
            boolean existe=false;
            if(rs.next()) {       
                String validaprecio=jcmenudeo.getSelectedItem().toString();
                if(validaprecio.equals("MENUDEO")){
                    precio=rs.getFloat("precio_venta");
                }
                if(validaprecio.equals("MAYOREO")){
                    precio=rs.getFloat("precio_mayoreo");
                }
                codigobarra=rs.getString("codigo_barras");
                producto=rs.getString("nombre_producto");
                existencia=rs.getInt("existencia");
                id=rs.getString("idproducto");
                existe=true;
                //modelo.addRow(new Object[]{rs.getString("codigo_barras"),rs.getString("nombre_producto"),rs.getString("precio_venta"),"1","10",rs.getString("existencia")});
            }
            rs.close(); 
            st.close();
            con.desconectar();   
            
            if(existe){
                boolean existe_tabla_temp=false;
                for(int fila=0; fila<jtproductoscoti.getRowCount(); fila++){
                    String barcode=jtproductoscoti.getValueAt(fila, 0).toString().trim();                 
                    float precio_unitario=Float.parseFloat(jtproductoscoti.getValueAt(fila, 2).toString().trim());
                    int cantidad=Integer.parseInt(jtproductoscoti.getValueAt(fila, 3).toString().trim());                                  
                    int existencia_total=Integer.parseInt(jtproductoscoti.getValueAt(fila, 5).toString().trim());
                    String id_prod=jtproductoscoti.getValueAt(fila, 6).toString().trim();                 
                    if(id_prod.equals(id)){                                                            
                        cantidad++;
                        float total_final=precio_unitario*cantidad;                     
                        existencia_total=existencia_total-1;
                        jtproductoscoti.setValueAt(cantidad, fila, 3); 
                        jtproductoscoti.setValueAt(total_final, fila, 4);   
                        jtproductoscoti.setValueAt(existencia_total, fila, 5);  
                        System.out.println("MAS DE UN REGISTRO PERO YA ESTA EN TABLA");
                        existe_tabla_temp=true;
                    }/*else{//es nuevo y se agrega    
                       System.out.println("MAS DE UN REGISTRO, PERO NUEVO");
                       modelo.addRow(new Object[]{codigobarra,producto,precio+"","1",precio+"",existencia-1});
                    }*/                 
                }

                if(existe_tabla_temp==false && jtproductoscoti.getRowCount()>0){
                       System.out.println("MAS DE UN REGISTRO, PERO NUEVO");
                       modelo.addRow(new Object[]{codigobarra,producto,precio+"","1",precio+"",existencia-1,id,"0"});
                }
                
                if(jtproductoscoti.getRowCount()<=0){//es el primer registro
                   System.out.println("PRIMER REGISTRO");
                   modelo.addRow(new Object[]{codigobarra,producto,precio+"","1",precio+"",existencia-1,id,"0"});
                }
            }
             
        } catch (SQLException ex) {
        }
        
        jtproductoscoti.getColumnModel().getColumn(6).setMaxWidth(0);
        jtproductoscoti.getColumnModel().getColumn(6).setMinWidth(0);
        jtproductoscoti.getColumnModel().getColumn(6).setPreferredWidth(0);
        jtproductoscoti.getColumnModel().getColumn(6).setWidth(0);
        
        jtproductoscoti.getColumnModel().getColumn(5).setMaxWidth(0);
        jtproductoscoti.getColumnModel().getColumn(5).setMinWidth(0);
        jtproductoscoti.getColumnModel().getColumn(5).setPreferredWidth(0);
        jtproductoscoti.getColumnModel().getColumn(5).setWidth(0);
        
        txtproductocoti.setText("");
        cargar_informacion();
        txtproductocoti.requestFocus();
    }
    
    
    
    public static void cargar_productobusqueda(String idprods){
        DefaultTableModel modelo=(DefaultTableModel) jtproductoscoti.getModel();          
        String codigo_barras=idprods;
        conex con=new conex();          
        ResultSet rs = null;       
        String myQuery = "SELECT * FROM tc_productos WHERE idproducto='"+codigo_barras+"' and estatus=1";
        System.out.println(""+myQuery);
        try {  
            Statement st = con.getConnection().createStatement();
            rs = st.executeQuery(myQuery);
            float precio=0;
            String codigobarra="",producto="";
            int existencia=0;
            String id="";
            boolean existe=false;
            if(rs.next()) {        
                String validaprecio=jcmenudeo.getSelectedItem().toString();
                if(validaprecio.equals("MENUDEO")){
                    precio=rs.getFloat("precio_venta");
                }
                if(validaprecio.equals("MAYOREO")){
                    precio=rs.getFloat("precio_mayoreo");
                }
                
                codigobarra=rs.getString("codigo_barras");
                producto=rs.getString("nombre_producto");
                existencia=rs.getInt("existencia");
                id=rs.getString("idproducto");
                existe=true;
                //modelo.addRow(new Object[]{rs.getString("codigo_barras"),rs.getString("nombre_producto"),rs.getString("precio_venta"),"1","10",rs.getString("existencia")});
            }
            rs.close(); 
            st.close();
            con.desconectar();   
            
            if(existe){
                boolean existe_tabla_temp=false;
                for(int fila=0; fila<jtproductoscoti.getRowCount(); fila++){
                    String barcode=jtproductoscoti.getValueAt(fila, 0).toString().trim();                 
                    float precio_unitario=Float.parseFloat(jtproductoscoti.getValueAt(fila, 2).toString().trim());
                    int cantidad=Integer.parseInt(jtproductoscoti.getValueAt(fila, 3).toString().trim());                                  
                    int existencia_total=Integer.parseInt(jtproductoscoti.getValueAt(fila, 5).toString().trim());
                    String id_prod=jtproductoscoti.getValueAt(fila, 6).toString().trim();                 
                    if(id_prod.equals(id)){
                        cantidad++;
                        float total_final=precio_unitario*cantidad;                     
                        existencia_total=existencia_total-1;
                        jtproductoscoti.setValueAt(cantidad, fila, 3); 
                        jtproductoscoti.setValueAt(total_final, fila, 4);   
                        jtproductoscoti.setValueAt(existencia_total, fila, 5);  
                        System.out.println("MAS DE UN REGISTRO PERO YA ESTA EN TABLA");
                        existe_tabla_temp=true;
                    }/*else{//es nuevo y se agrega    
                       System.out.println("MAS DE UN REGISTRO, PERO NUEVO");
                       modelo.addRow(new Object[]{codigobarra,producto,precio+"","1",precio+"",existencia-1});
                    }*/                 
                }

                if(existe_tabla_temp==false && jtproductoscoti.getRowCount()>0){
                       System.out.println("MAS DE UN REGISTRO, PERO NUEVO");
                       modelo.addRow(new Object[]{codigobarra,producto,precio+"","1",precio+"",existencia-1,id,"0"});
                }
                
                if(jtproductoscoti.getRowCount()<=0){//es el primer registro
                   System.out.println("PRIMER REGISTRO");
                   modelo.addRow(new Object[]{codigobarra,producto,precio+"","1",precio+"",existencia-1,id,"0"});
                }
            }
             
        } catch (SQLException ex) {
        }
        
        jtproductoscoti.getColumnModel().getColumn(6).setMaxWidth(0);
        jtproductoscoti.getColumnModel().getColumn(6).setMinWidth(0);
        jtproductoscoti.getColumnModel().getColumn(6).setPreferredWidth(0);
        jtproductoscoti.getColumnModel().getColumn(6).setWidth(0);
        
        jtproductoscoti.getColumnModel().getColumn(5).setMaxWidth(0);
        jtproductoscoti.getColumnModel().getColumn(5).setMinWidth(0);
        jtproductoscoti.getColumnModel().getColumn(5).setPreferredWidth(0);
        jtproductoscoti.getColumnModel().getColumn(5).setWidth(0);
        
        txtproductocoti.setText("");
        cargar_informacion();
        txtproductocoti.requestFocus();
    }
    
    
    public static void cargar_informacion(){
       float total_valor=0;
       int total=0;
       for(int fila=0; fila<jtproductoscoti.getRowCount(); fila++){
               
                total_valor=total_valor+Float.parseFloat(jtproductoscoti.getValueAt(fila, 4).toString());
                //System.out.println(""+total_valor);
                total++;
       }
       //DecimalFormat df = new DecimalFormat("0.00"); 
       //jlmonto.setText("$ "+df.format(total_valor)+"");       
       jlmonto.setText("$ "+total_valor+"");       
       jltotal.setText(total+"");
       
   } 

    
    
    public void cargar_clientes(){
       
        
        conex con=new conex();          
        ResultSet rs = null;       
        String myQuery = "SELECT * FROM tc_clientes order by nombre_completo asc";        
        try {  
            Statement st = con.getConnection().createStatement();
            rs = st.executeQuery(myQuery);            
            while(rs.next()) {     
                jcclientecoti.addItem(rs.getString("nombre_completo")+"-"+rs.getString("idcliente"));
            }
            rs.close(); 
            st.close();
            con.desconectar();                
        } catch (SQLException ex) {
        }
       
   } 

public static void cotizacion_venta(){
            String tipoventa=jctipoventacoti.getSelectedItem().toString();
            String cliente=jcclientecoti.getSelectedItem().toString();
            if(cliente.equals("Selecciona..")){
                cliente="0";
            }else{
                cliente=id(cliente);
            }
            
            
    int numprod=jtproductoscoti.getRowCount();
    if(numprod>0){
        ArrayList productos=new ArrayList();
        for(int fila=0; fila<jtproductoscoti.getRowCount(); fila++){
               //id    codigobarras   precioventa   cantidad   totalprod  descriprod
               productos.add(jtproductoscoti.getValueAt(fila, 6).toString()+"@"+jtproductoscoti.getValueAt(fila, 0).toString()+"@"+jtproductoscoti.getValueAt(fila, 2).toString()+"@"+jtproductoscoti.getValueAt(fila, 3).toString()+"@"+jtproductoscoti.getValueAt(fila, 4).toString()+"@"+jtproductoscoti.getValueAt(fila, 1).toString());               
       }
        
        int cant=jlmonto.getText().trim().length();
        String monto=jlmonto.getText().trim().substring(1, cant); //se quita el caracter $        
        float monto_final=Float.parseFloat(monto);
        
        cobrar_ventafinal cobro=new cobrar_ventafinal();
        boolean exito=cobro.cotizacion(monto_final,0,"","EFECTIVO",productos,"SINIMPRIMIR",0,tipoventa,cliente);  
        vaciartabla();
        cargar_informacion();
        jctipoventacoti.setSelectedIndex(0);
        jcclientecoti.setSelectedIndex(0);
    }else{
        JOptionPane.showMessageDialog(null, "No hay productos en la cotización. ", "Error al registrar la cotizacion", JOptionPane.ERROR_MESSAGE);
    }

}    

public void ponerfocoenventa(){
    txtproductocoti.requestFocus();
    
}


public static String id(String id){
        String ids=id;
        String[] temp=ids.split("-");
        for(int i=1;i<2;i++){
            ids=temp[i];
        }
    return ids;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JComboBox<String> jcclientecoti;
    private static javax.swing.JComboBox<String> jcmenudeo;
    public static javax.swing.JComboBox<String> jctipoventacoti;
    private static javax.swing.JLabel jlmonto;
    private static javax.swing.JLabel jltotal;
    public static javax.swing.JTable jtproductoscoti;
    public static javax.swing.JTextField txtproductocoti;
    // End of variables declaration//GEN-END:variables

    
    public void keyPressed(KeyEvent e) {   
    if (e.VK_F10==e.getKeyCode())
    {
        Frame f = JOptionPane.getFrameForComponent(this);
        catalogo_productosCoti dialog = new catalogo_productosCoti(f, true);
        dialog.show();
    }
    
    if (e.VK_F12==e.getKeyCode())
    {
        
        System.out.println("VENTA");
        cotizacion_venta();
        /*Frame f = JOptionPane.getFrameForComponent(this);
        CobrarCajaInicial dialog = new CobrarCajaInicial(f, true);
        dialog.show();
        */ 
        //cobrar_venta();
    }
    
   }


    
    @Override
    public void keyTyped(KeyEvent e) {        
    }

    @Override
    public void keyReleased(KeyEvent e) {
    if (e.getSource()==txtproductocoti)
    {
        if (e.VK_ESCAPE==e.getKeyCode())
        {
            
        }
    }        
    }
}
