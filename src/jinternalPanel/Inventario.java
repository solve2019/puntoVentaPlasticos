/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package jinternalPanel;

import ClasesDAO.accesoSistema;
import Utilerias.funciones;
import conexion.conex;
import java.awt.Frame;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SpinnerNumberModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import jdialog.buscar_ajuste_inventario;
import jdialog.catalogo_productos;

/**
 *
 * @author desarrollo8
 */
public class Inventario extends javax.swing.JInternalFrame {
private static TableRowSorter<TableModel> sorter;
    /**
     * Creates new form Inventario
     */
    public Inventario() {
        
        initComponents();
        Calendar c2 = new GregorianCalendar();
        txtfechaini.setCalendar(c2);
        txtfechafin.setCalendar(c2);
        cargartabla();
        cargartablahistorico();        
        cargartablainventario();
        jPanel1.requestFocus();
        txtproducto.requestFocus();
        txtproducto.requestDefaultFocus();
        
        jtdiferencias.getColumnModel().getColumn(0).setMaxWidth(100);
        jtdiferencias.getColumnModel().getColumn(0).setMinWidth(50);
        jtdiferencias.getColumnModel().getColumn(0).setPreferredWidth(100);
        jtdiferencias.getColumnModel().getColumn(0).setWidth(100);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtproducto = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jlproducto = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jlcantidadactual = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        int min = 0;
        int max = 2000;
        int val = min;
        int step = 1;
        jscantidad = new javax.swing.JSpinner(new SpinnerNumberModel(val,min,max,step));
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        txtidprod = new javax.swing.JTextField();
        jscantidad1 = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtproductoreajuste = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jlproductoreajuste = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jlcantidadreajuste = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jsnuevacantidadreajuste = new javax.swing.JSpinner(new SpinnerNumberModel(val,min,max,step));
        jButton4 = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jldiferencia = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        idprod_reajuste = new javax.swing.JTextField();
        jsnuevacantidadreajuste1 = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtprodbajos = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex) {
                return false; //Disallow the editing of any cell
            }
        };
        jButton5 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jthistorico = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex) {
                return false; //Disallow the editing of any cell
            }
        };
        jButton8 = new javax.swing.JButton();
        jctipomovimiento = new javax.swing.JComboBox<>();
        jButton10 = new javax.swing.JButton();
        txtfechaini = new com.toedter.calendar.JDateChooser();
        txtfechafin = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtproductosinventario = new javax.swing.JTable();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jlcantidad = new javax.swing.JLabel();
        jlcosto = new javax.swing.JLabel();
        jButton9 = new javax.swing.JButton();
        jLabel25 = new javax.swing.JLabel();
        jlcostoalmacen = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jtdiferencias = new javax.swing.JTable();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();

        setClosable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Inventario");

        jPanel2.setBackground(new java.awt.Color(249, 249, 249));

        //jTabbedPane1.setIconAt(0, new javax.swing.ImageIcon(getClass().getResource("/images/cliente.png")));
        jTabbedPane1.setBackground(new java.awt.Color(248, 244, 244));
        jTabbedPane1.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, new java.awt.Color(0, 0, 0), new java.awt.Color(102, 102, 102)));
        jTabbedPane1.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(248, 244, 244));
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel1MouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 0, 204));
        jLabel1.setText("AGREGAR A INVENTARIO");

        jLabel2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel2.setText("Código del Producto");

        txtproducto.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txtproducto.requestFocus();
        txtproducto.setToolTipText("Codigo de barras del producto");
        txtproducto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtproductoKeyPressed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel3.setText("Descripción");

        jlproducto.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jlproducto.setText("-");

        jLabel5.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel5.setText("Cantidad Actual");

        jlcantidadactual.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jlcantidadactual.setText("0");

        jLabel7.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel7.setText("Cantidad");

        jscantidad.setVisible(false);

        if(accesoSistema.licencia.equals("DEMO")){
            jButton1.setVisible(false);
        }
        jButton1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/mas.png"))); // NOI18N
        jButton1.setText("Agregar cantidad a Inventario");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icono.png"))); // NOI18N
        jButton2.setText("Enter");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton6.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/buscar.png"))); // NOI18N
        jButton6.setText("Buscar");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        txtidprod.setVisible(false);

        jscantidad1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jscantidad1.setText("0");
        jscantidad1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jscantidad1KeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jlproducto, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlcantidadactual, javax.swing.GroupLayout.DEFAULT_SIZE, 299, Short.MAX_VALUE)
                            .addComponent(txtproducto, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jscantidad1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(44, 44, 44)
                                .addComponent(jscantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                            .addComponent(txtidprod))))
                .addContainerGap(201, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtproducto))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlproducto, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlcantidadactual, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(txtidprod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jscantidad1, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                    .addComponent(jscantidad))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(299, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Agregar a Inv.", new javax.swing.ImageIcon(getClass().getResource("/images/mas.png")), jPanel1); // NOI18N

        jPanel3.setBackground(new java.awt.Color(248, 244, 244));
        jPanel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel3MouseClicked(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(51, 0, 204));
        jLabel8.setText("REAJUSTAR INVENTARIO");

        jLabel9.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel9.setText("Código del Producto");

        txtproductoreajuste.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txtproductoreajuste.setToolTipText("Codigo de barras del producto");
        txtproductoreajuste.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtproductoreajusteKeyPressed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icono.png"))); // NOI18N
        jButton3.setText("Enter");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel10.setText("Descripción");

        jlproductoreajuste.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jlproductoreajuste.setText("-");

        jLabel12.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel12.setText("Cantidad Actual");

        jlcantidadreajuste.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jlcantidadreajuste.setText("0");

        jLabel14.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel14.setText("Nueva Cantidad");

        jsnuevacantidadreajuste.setVisible(false);
        jsnuevacantidadreajuste.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jsnuevacantidadreajusteStateChanged(evt);
            }
        });
        jsnuevacantidadreajuste.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jsnuevacantidadreajusteKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jsnuevacantidadreajusteKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jsnuevacantidadreajusteKeyTyped(evt);
            }
        });

        if(accesoSistema.licencia.equals("DEMO")){
            jButton4.setVisible(false);
        }
        jButton4.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/inventario.png"))); // NOI18N
        jButton4.setText("Establecer como nuevo inventario");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel15.setText("Diferencia");

        jldiferencia.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jldiferencia.setText("0.00");

        jLabel17.setForeground(new java.awt.Color(204, 153, 0));
        jLabel17.setText("Al hacer un ajuste, la cantidad ingresada, remplazará la cantidad anterior del inventario del producto.");

        jButton7.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/buscar.png"))); // NOI18N
        jButton7.setText("Buscar");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        idprod_reajuste.setVisible(false);

        jsnuevacantidadreajuste1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jsnuevacantidadreajuste1.setText("0");
        jsnuevacantidadreajuste1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jsnuevacantidadreajuste1KeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)
                                .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jsnuevacantidadreajuste1, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jsnuevacantidadreajuste, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel17)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jldiferencia, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jlproductoreajuste, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jlcantidadreajuste, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtproductoreajuste, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 299, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(idprod_reajuste, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel8))
                .addContainerGap(211, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtproductoreajuste, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlproductoreajuste, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(idprod_reajuste, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlcantidadreajuste, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                    .addComponent(jsnuevacantidadreajuste1)
                    .addComponent(jsnuevacantidadreajuste))
                .addGap(9, 9, 9)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jldiferencia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(6, 6, 6))
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel17)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Ajustes", new javax.swing.ImageIcon(getClass().getResource("/images/edit.png")), jPanel3); // NOI18N

        jPanel4.setBackground(new java.awt.Color(248, 244, 244));

        jLabel18.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(51, 0, 204));
        jLabel18.setText("PRODUCTOS BAJOS EN INVENTARIO");

        jLabel19.setText("A continuación se muestra un listado con productos con inventario debajo de su minimo: ");

        jtprodbajos.getTableHeader().setReorderingAllowed(false) ;
        jtprodbajos.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jtprodbajos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Descripción del producto", "Precio Venta", "Inventario", "Inventario Minimo"
            }
        ));
        jtprodbajos.setRowHeight(22);
        jtprodbajos.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(jtprodbajos);

        jButton5.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/excel.png"))); // NOI18N
        jButton5.setText("Exportar");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18)
                            .addComponent(jLabel19))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 283, Short.MAX_VALUE)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel19))
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Productos bajos en Inventario", new javax.swing.ImageIcon(getClass().getResource("/images/producto_bajo.png")), jPanel4); // NOI18N

        jPanel6.setBackground(new java.awt.Color(248, 244, 244));

        jLabel20.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(51, 0, 204));
        jLabel20.setText("MOVIMIENTOS DE INVENTARIO DE PRODUCTOS");

        jLabel21.setText("A continuación se muestra un listado con los movimientos de entrada, ajsutes y devoluciones de productos: ");

        jthistorico.getTableHeader().setReorderingAllowed(false);
        jthistorico.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jthistorico.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fecha", "Producto", "Codigo de Barras", "Cantidad", "Usuario Movimiento", "Tipo Mivimiento"
            }
        ));
        jthistorico.setRowHeight(22);
        jthistorico.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(jthistorico);

        jButton8.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/excel.png"))); // NOI18N
        jButton8.setText("Exporar");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jctipomovimiento.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecciona..", "INGRESO", "SALIDA", "REAJUSTE", "DEVOLUCION" }));

        jButton10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/buscar.png"))); // NOI18N
        jButton10.setText("Buscar");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 51, 153));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Del");

        jLabel11.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 51, 153));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("Al");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel20)
                            .addComponent(jLabel21))
                        .addGap(0, 298, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtfechaini, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jctipomovimiento, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtfechafin, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jButton10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel21)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtfechaini, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtfechafin, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jctipomovimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 347, Short.MAX_VALUE)
                .addGap(50, 50, 50))
        );

        jTabbedPane1.addTab("Reporte de Movimientos", new javax.swing.ImageIcon(getClass().getResource("/images/Icono_libro.png")), jPanel6); // NOI18N

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        jLabel22.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(51, 0, 204));
        jLabel22.setText("INVENTARIO DE PRODUCTOS");

        jtproductosinventario.getTableHeader().setReorderingAllowed(false);
        jtproductosinventario.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jtproductosinventario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Código de Barras", "Descripción", "Precio de Compra", "Precio de Venta", "Existencia", "Inv. Mínimo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtproductosinventario.setRowHeight(22);
        jScrollPane3.setViewportView(jtproductosinventario);

        jLabel23.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(102, 102, 255));
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel23.setText("Cantidad de productos");

        jLabel24.setVisible(false);
        jLabel24.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(102, 102, 255));
        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel24.setText("Costo de Inventario");

        jlcantidad.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jlcantidad.setForeground(new java.awt.Color(102, 102, 255));
        jlcantidad.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlcantidad.setText("$0.00");

        jlcosto.setVisible(false);
        jlcosto.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jlcosto.setForeground(new java.awt.Color(102, 102, 255));
        jlcosto.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlcosto.setText("$0.00");

        jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/excel.png"))); // NOI18N
        jButton9.setText("Exportar");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jLabel25.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(102, 102, 255));
        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel25.setText("Costo Almacén");

        jlcostoalmacen.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jlcostoalmacen.setForeground(new java.awt.Color(102, 102, 255));
        jlcostoalmacen.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlcostoalmacen.setText("$0.00");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel22)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jlcantidad, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel23, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlcostoalmacen, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jlcosto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 246, Short.MAX_VALUE)
                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel22)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(jLabel24)
                    .addComponent(jLabel25))
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlcantidad)
                            .addComponent(jlcosto)
                            .addComponent(jlcostoalmacen))
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton9)
                        .addGap(3, 3, 3)))
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 428, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Reporte de Inventarios", jPanel5);

        jPanel7.setBackground(new java.awt.Color(248, 244, 244));

        jtdiferencias.getTableHeader().setReorderingAllowed(false);
        jtdiferencias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id Producto", "Codigo Barras", "Producto", "Inv. Sistema", "Inv. Fisico", "Diferencias", "Estatus", "Inventariado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(jtdiferencias);

        jButton11.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jButton11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/borrar.png"))); // NOI18N
        jButton11.setText("Limpiar Inventario Fisico");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jButton12.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jButton12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/palomita.png"))); // NOI18N
        jButton12.setText("Establecer Nuevo Inventario");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jButton13.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jButton13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/excel.png"))); // NOI18N
        jButton13.setText("Exportar");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jButton14.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jButton14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Configuracion.png"))); // NOI18N
        jButton14.setText("Cargar Información");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        jButton15.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jButton15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/rep.png"))); // NOI18N
        jButton15.setText("Iniciar Inventario");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 836, Short.MAX_VALUE)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton11, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                    .addComponent(jButton13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 449, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane1.addTab("Inv. Fisico VS Inv. Sistema", jPanel7);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        Frame f = JOptionPane.getFrameForComponent(this);
        buscar_ajuste_inventario dialog = new buscar_ajuste_inventario(f, true,"2");
        dialog.show();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:

        String cant_actual=jlcantidadreajuste.getText().trim();
        String cantidad=jsnuevacantidadreajuste1.getText().trim().toString();
        if(isNumberfloat(cantidad)){
            float nuevo_cantidad=Float.parseFloat(cantidad);
            float diferencia=Float.parseFloat(cantidad)-Float.parseFloat(cant_actual);
            conex con=new conex();
            try {
                String myQuery = "update tc_productos set existencia='"+nuevo_cantidad+"' where idproducto='"+idprod_reajuste.getText().trim()+"'";
                Statement st = con.getConnection().createStatement();
                st.executeUpdate(myQuery);
                myQuery = "insert into th_inventarios_registrados (id_producto,fecha,usuario_ajusto,tipo_mov,cantidad_actual,cantidad_nueva,cantidad_agregada) values ('"+idprod_reajuste.getText().trim()+"',now(),'"+accesoSistema.nombreuser+"','REAJUSTE','"+cant_actual+"','"+cantidad+"','"+diferencia+"')";
                System.out.println(""+myQuery);
                st.executeUpdate(myQuery);
                st.close();
                con.desconectar();
                jlproductoreajuste.setText("-");
                jlcantidadreajuste.setText("0");
                idprod_reajuste.setText("");
                txtproductoreajuste.setText("");
                jsnuevacantidadreajuste1.setText("0");

                cargartabla();
                cargartablahistorico();         
                cargartablainventario();
                jlproductoreajuste.requestFocus();
                JOptionPane.showMessageDialog(null, "Se reajusto el inventario correctamente. ", "Inventario actualizado", JOptionPane.PLAIN_MESSAGE);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Error al reajustar el inventario: "+ex, "Error", JOptionPane.ERROR_MESSAGE);
            }
        }else{
            jsnuevacantidadreajuste1.requestFocus();
            JOptionPane.showMessageDialog(null, "Verifica que la cantidad a ingresar este escrita correctamente.", "Error formato de numero.", JOptionPane.ERROR_MESSAGE);
        }        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jsnuevacantidadreajusteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jsnuevacantidadreajusteKeyTyped
        // TODO add your handling code here:
        String cant_actual=jlcantidadreajuste.getText().trim();
        String cantidad=jsnuevacantidadreajuste.getValue().toString();
        int nuevacant=Integer.parseInt(cantidad);
        int cantactual=Integer.parseInt(cant_actual);
        int diferencia=Integer.parseInt(cantidad)-Integer.parseInt(cant_actual);
        System.out.println("cambio espiner"+cantidad);
        jldiferencia.setText(""+diferencia);

    }//GEN-LAST:event_jsnuevacantidadreajusteKeyTyped

    private void jsnuevacantidadreajusteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jsnuevacantidadreajusteKeyReleased
        // TODO add your handling code here:
        String cant_actual=jlcantidadreajuste.getText().trim();
        String cantidad=jsnuevacantidadreajuste.getValue().toString();
        int nuevacant=Integer.parseInt(cantidad);
        int cantactual=Integer.parseInt(cant_actual);
        int diferencia=Integer.parseInt(cantidad)-Integer.parseInt(cant_actual);
        System.out.println("cambio espiner"+cantidad);
        jldiferencia.setText(""+diferencia);
    }//GEN-LAST:event_jsnuevacantidadreajusteKeyReleased

    private void jsnuevacantidadreajusteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jsnuevacantidadreajusteKeyPressed
        // TODO add your handling code here:

    }//GEN-LAST:event_jsnuevacantidadreajusteKeyPressed

    private void jsnuevacantidadreajusteStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jsnuevacantidadreajusteStateChanged
        // TODO add your handling code here:

        String cant_actual=jlcantidadreajuste.getText().trim();
        String cantidad=jsnuevacantidadreajuste.getValue().toString();
        int nuevacant=Integer.parseInt(cantidad);
        int cantactual=Integer.parseInt(cant_actual);
        int diferencia=Integer.parseInt(cantidad)-Integer.parseInt(cant_actual);
        System.out.println("cambio espiner"+cantidad);
        jldiferencia.setText(""+diferencia);

    }//GEN-LAST:event_jsnuevacantidadreajusteStateChanged

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:

        cargadatosajuste(txtproductoreajuste.getText().trim());

    }//GEN-LAST:event_jButton3ActionPerformed

    private void txtproductoreajusteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtproductoreajusteKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            cargadatosajuste(txtproductoreajuste.getText().trim());
        }
    }//GEN-LAST:event_txtproductoreajusteKeyPressed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        Frame f = JOptionPane.getFrameForComponent(this);
        buscar_ajuste_inventario dialog = new buscar_ajuste_inventario(f, true,"1");
        dialog.show();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        cargadatos(txtproducto.getText().trim());

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String cant_actual=jlcantidadactual.getText().trim();
        String cantidad=jscantidad1.getText().trim().toString();
        if(isNumberfloat(cantidad)){
            float nuevo_cantidad=Float.parseFloat(cant_actual)+Float.parseFloat(cantidad);
            conex con=new conex();
            try {
                String myQuery = "update tc_productos set existencia='"+nuevo_cantidad+"' where idproducto='"+txtidprod.getText().trim()+"'";
                Statement st = con.getConnection().createStatement();
                st.executeUpdate(myQuery);
                myQuery = "insert into th_inventarios_registrados (id_producto,cantidad_agregada,fecha,usuario_ajusto,tipo_mov) values ('"+txtidprod.getText().trim()+"','"+cantidad+"',now(),'"+accesoSistema.nombreuser+"','INGRESO')";
                System.out.println(""+myQuery);
                st.executeUpdate(myQuery);
                st.close();
                con.desconectar();
                jlproducto.setText("-");
                jlcantidadactual.setText("0");
                txtidprod.setText("");
                txtproducto.setText("");
                jscantidad1.setText("0");
                cargartabla();
                cargartablahistorico();         
                cargartablainventario();
                jlproducto.requestFocus();
                JOptionPane.showMessageDialog(null, "Se actualizo el inventario correctamente. ", "Inventario registrado", JOptionPane.PLAIN_MESSAGE);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Error al actualizar el inventario: "+ex, "Error", JOptionPane.ERROR_MESSAGE);
            }
        }else{
            jscantidad1.requestFocus();
            JOptionPane.showMessageDialog(null, "Verifica que la cantidad a ingresar este escrita correctamente.", "Error formato de numero.", JOptionPane.ERROR_MESSAGE);
        }
        

    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtproductoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtproductoKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            cargadatos(txtproducto.getText().trim());
        }
    }//GEN-LAST:event_txtproductoKeyPressed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        
            Date fecha1=new Date();
            SimpleDateFormat formateador = new SimpleDateFormat("dd-MM-yyyy hh-MM-ss");
            //formateador.format(fecha1);
            System.out.println(formateador.format(fecha1));  
            System.out.println(fecha1.toLocaleString());
            File archivo;


            javax.swing.JFileChooser jF1= new javax.swing.JFileChooser(); 
            String ruta = ""; 
            try{ 
            if(jF1.showSaveDialog(null)==jF1.APPROVE_OPTION){ 
            ruta = jF1.getSelectedFile().getAbsolutePath();
            //archivo = new File(ruta+""+formateador.format(fecha1)+".xls");
            archivo = new File(ruta+".xls");
            System.out.println(archivo);
            //Aqui ya tiens la ruta,,,ahora puedes crear un fichero n esa ruta y escribir lo k kieras...
            exportarjTable(jtprodbajos,archivo);
            JOptionPane.showMessageDialog(null, "El reporte se ha generado con exito", "Mensaje", JOptionPane.DEFAULT_OPTION);
            } 
            }catch (Exception ex){ 
                    JOptionPane.showMessageDialog(null, "No se ha podido generar el archivo:"+ex, "Error", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace(); 
            }
        
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        
        Date fecha1=new Date();
            SimpleDateFormat formateador = new SimpleDateFormat("dd-MM-yyyy hh-MM-ss");
            //formateador.format(fecha1);
            System.out.println(formateador.format(fecha1));  
            System.out.println(fecha1.toLocaleString());
            File archivo;


            javax.swing.JFileChooser jF1= new javax.swing.JFileChooser(); 
            String ruta = ""; 
            try{ 
            if(jF1.showSaveDialog(null)==jF1.APPROVE_OPTION){ 
            ruta = jF1.getSelectedFile().getAbsolutePath();
            //archivo = new File(ruta+""+formateador.format(fecha1)+".xls");
            archivo = new File(ruta+".xls");
            System.out.println(archivo);
            //Aqui ya tiens la ruta,,,ahora puedes crear un fichero n esa ruta y escribir lo k kieras...
            exportarjTable(jtproductosinventario,archivo);
            JOptionPane.showMessageDialog(null, "El reporte se ha generado con exito", "Mensaje", JOptionPane.DEFAULT_OPTION);
            } 
            }catch (Exception ex){ 
                    JOptionPane.showMessageDialog(null, "No se ha podido generar el archivo:"+ex, "Error", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace(); 
            }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        
        Date fecha1=new Date();
            SimpleDateFormat formateador = new SimpleDateFormat("dd-MM-yyyy hh-MM-ss");
            //formateador.format(fecha1);
            System.out.println(formateador.format(fecha1));  
            System.out.println(fecha1.toLocaleString());
            File archivo;


            javax.swing.JFileChooser jF1= new javax.swing.JFileChooser(); 
            String ruta = ""; 
            try{ 
            if(jF1.showSaveDialog(null)==jF1.APPROVE_OPTION){ 
            ruta = jF1.getSelectedFile().getAbsolutePath();
            //archivo = new File(ruta+""+formateador.format(fecha1)+".xls");
            archivo = new File(ruta+".xls");
            System.out.println(archivo);
            //Aqui ya tiens la ruta,,,ahora puedes crear un fichero n esa ruta y escribir lo k kieras...
            exportarjTable(jthistorico,archivo);
            JOptionPane.showMessageDialog(null, "El reporte se ha generado con exito", "Mensaje", JOptionPane.DEFAULT_OPTION);
            } 
            }catch (Exception ex){ 
                    JOptionPane.showMessageDialog(null, "No se ha podido generar el archivo:"+ex, "Error", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace(); 
            }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        cargartablahistorico();
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked
        // TODO add your handling code here:
        System.out.println("hola1");
    }//GEN-LAST:event_jTabbedPane1MouseClicked

    private void jPanel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel3MouseClicked
        // TODO add your handling code here:
                txtproductoreajuste.requestFocus();     
    }//GEN-LAST:event_jPanel3MouseClicked

    private void jPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseClicked
        // TODO add your handling code here:
        txtproducto.requestFocus();     
    }//GEN-LAST:event_jPanel1MouseClicked

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
          Date fecha1=new Date();
            SimpleDateFormat formateador = new SimpleDateFormat("dd-MM-yyyy hh-MM-ss");
            //formateador.format(fecha1);
            System.out.println(formateador.format(fecha1));  
            System.out.println(fecha1.toLocaleString());
            File archivo;


            javax.swing.JFileChooser jF1= new javax.swing.JFileChooser(); 
            String ruta = ""; 
            try{ 
            if(jF1.showSaveDialog(null)==jF1.APPROVE_OPTION){ 
            ruta = jF1.getSelectedFile().getAbsolutePath();
            //archivo = new File(ruta+""+formateador.format(fecha1)+".xls");
            archivo = new File(ruta+".xls");
            System.out.println(archivo);
            //Aqui ya tiens la ruta,,,ahora puedes crear un fichero n esa ruta y escribir lo k kieras...
            exportarjTable(jtdiferencias,archivo);
            JOptionPane.showMessageDialog(null, "El reporte se ha generado con exito", "Mensaje", JOptionPane.DEFAULT_OPTION);
            } 
            }catch (Exception ex){ 
                    JOptionPane.showMessageDialog(null, "No se ha podido generar el archivo:"+ex, "Error", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace(); 
            }
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        int dialogButton = JOptionPane.YES_NO_OPTION;
        JOptionPane.showConfirmDialog (null, "Deseas eliminar todo el inventario fisico capturado?","Warning",dialogButton);

        if(dialogButton == JOptionPane.YES_OPTION){
            conex con=new conex();
            try {
                String myQuery = "delete from to_inventariofisico;";
                Statement st = con.getConnection().createStatement();
                st.executeUpdate(myQuery);
                myQuery = "update to_parametros set parametro='NO' where clave='INVENTARIOFISICO'";
                st.executeUpdate(myQuery);
                st.close();
                con.desconectar();   
                cargartablainvfisico();
                JOptionPane.showMessageDialog(null, "Se borro el inventario fisico correctamente. ", "Inventario Fisico", JOptionPane.PLAIN_MESSAGE);
            } catch (SQLException ex) {

                JOptionPane.showMessageDialog(null, "Error al borrar el inventario fisico: "+ex, "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        // TODO add your handling code here:
        cargartablainvfisico();
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
            int dialogButton = JOptionPane.YES_NO_OPTION;
            JOptionPane.showConfirmDialog (null, "Desea actualizar las cantidades del inventario al sistema, solo se actualizan los productos que esten inventariados?","Alerta",dialogButton);

                if(dialogButton == JOptionPane.YES_OPTION){ //The ISSUE is here
                int numprod=jtdiferencias.getRowCount();        
                for(int fila=0; fila<jtdiferencias.getRowCount(); fila++){
                       String idprod=jtdiferencias.getValueAt(fila, 0).toString();
                       String cantsistema=jtdiferencias.getValueAt(fila, 3).toString();  
                       String cantinvfis=jtdiferencias.getValueAt(fila, 4).toString();               
                       String diferencia=jtdiferencias.getValueAt(fila, 5).toString();     
                       String estatus=jtdiferencias.getValueAt(fila, 6).toString();     
                       String inventariado=jtdiferencias.getValueAt(fila, 7).toString();     
                       if(inventariado.equals("SI")){
                            conex con=new conex();                                           
                            String myQuery = "update tc_productos set existencia="+cantinvfis+" WHERE idproducto='"+idprod+"'";                            
                            System.out.println(myQuery);
                            try {  
                                Statement st = con.getConnection().createStatement();
                                st.executeUpdate(myQuery);    
                                myQuery = "insert into th_inventarios_registrados (id_producto,fecha,usuario_ajusto,tipo_mov,cantidad_actual,cantidad_nueva,cantidad_agregada) values ('"+idprod+"',now(),'"+accesoSistema.nombreuser+"','REAJUSTE','"+cantsistema+"','"+cantinvfis+"','"+diferencia+"')";                                
                                System.out.println(myQuery);
                                st.executeUpdate(myQuery);                                            
                                st.close();
                                con.desconectar();   



                            } catch (SQLException ex) {                                
                            }
                       }
                }
                 JOptionPane.showMessageDialog(null, "Se actualizo correctamente", "OK", JOptionPane.INFORMATION_MESSAGE);
            }
        
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        // TODO add your handling code here:
        conex con=new conex();
        try {
            String myQuery = "update to_parametros set parametro='SI' where clave='INVENTARIOFISICO'";
            Statement st = con.getConnection().createStatement();
            st.executeUpdate(myQuery);            
            st.close();
            con.desconectar();                                    
            JOptionPane.showMessageDialog(null, "Se inicializo el inventario fisico correctamente. ", "Inventario Fisico", JOptionPane.PLAIN_MESSAGE);
        } catch (SQLException ex) {

            JOptionPane.showMessageDialog(null, "Error al iniciar el inventario fisico: "+ex, "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jscantidad1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jscantidad1KeyTyped
        // TODO add your handling code here:
        if(jscantidad1.getText().trim().length()>=7){
            //JOptionPane.showMessageDialog(null, "Solo acepta 15 caracteres", "Alerta", JOptionPane.ERROR_MESSAGE);
            evt.consume(); // ignorar el evento de teclado
        }else{
            if (((evt.getKeyChar() < '0') || (evt.getKeyChar() > '9')) && (evt.getKeyChar() != '.')){
               evt.consume(); // ignorar el evento de teclado
            }
        }
    }//GEN-LAST:event_jscantidad1KeyTyped

    private void jsnuevacantidadreajuste1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jsnuevacantidadreajuste1KeyTyped
        // TODO add your handling code here:
         if(jsnuevacantidadreajuste1.getText().trim().length()>=7){
            //JOptionPane.showMessageDialog(null, "Solo acepta 15 caracteres", "Alerta", JOptionPane.ERROR_MESSAGE);
            evt.consume(); // ignorar el evento de teclado
        }else{
            if (((evt.getKeyChar() < '0') || (evt.getKeyChar() > '9')) && (evt.getKeyChar() != '.')){
               evt.consume(); // ignorar el evento de teclado
            }
        }
    }//GEN-LAST:event_jsnuevacantidadreajuste1KeyTyped

    
    public void cargadatos(String producto_code){              
        String codigo_barras=producto_code;
        conex con=new conex();          
        ResultSet rs = null;       
        String myQuery = "SELECT * FROM tc_productos WHERE codigo_barras='"+codigo_barras+"' and estatus=1";
        //System.out.println(""+myQuery);
        try {  
            Statement st = con.getConnection().createStatement();
            rs = st.executeQuery(myQuery);            
            if(rs.next()) {  
                jlproducto.setText(rs.getString("nombre_producto"));
                jlcantidadactual.setText(rs.getString("existencia"));    
                txtidprod.setText(rs.getString("idproducto"));
            }
            rs.close(); 
            st.close();
            con.desconectar();   
            
          
             
        } catch (SQLException ex) {
        }
        txtproducto.setText("");
        txtproducto.requestFocus();
    }
    
    public void cargadatosajuste(String producto_code){              
        String codigo_barras=producto_code;
        conex con=new conex();          
        ResultSet rs = null;       
        String myQuery = "SELECT * FROM tc_productos WHERE codigo_barras='"+codigo_barras+"' and estatus=1";
        //System.out.println(""+myQuery);
        try {  
            Statement st = con.getConnection().createStatement();
            rs = st.executeQuery(myQuery);            
            if(rs.next()) {  
                jlproductoreajuste.setText(rs.getString("nombre_producto"));
                jlcantidadreajuste.setText(rs.getString("existencia"));    
                idprod_reajuste.setText(rs.getString("idproducto"));
            }
            rs.close(); 
            st.close();
            con.desconectar();   
            
          
             
        } catch (SQLException ex) {
        }
        txtproductoreajuste.setText("");
        txtproductoreajuste.requestFocus();
    }
    
    public void vaciartabla(){
            DefaultTableModel modelo=(DefaultTableModel) jtprodbajos.getModel();         
            for (int i = 0; i < jtprodbajos.getRowCount(); i++) {
                modelo.removeRow(i);
                i-=1;
            }    
    }
    
    public void cargartabla(){    
        vaciartabla();
        DefaultTableModel modelo=(DefaultTableModel) jtprodbajos.getModel();  
        conex con=new conex();   
        ResultSet rsR = null;        
        String myQuery = "select * from tc_productos where estatus=1 and cantidad_minima>existencia";
               //System.out.println(""+myQuery);
               try {
                   Statement st = con.getConnection().createStatement();
                   rsR = st.executeQuery(myQuery);
                   while(rsR.next()) {                                                
                            modelo.addRow(new Object[]{rsR.getString("codigo_barras"),rsR.getString("nombre_producto"),rsR.getString("precio_venta"),rsR.getString("existencia"),rsR.getString("cantidad_minima")});                        
                   }                   
                   rsR.close(); 
                   st.close();
                   con.desconectar();
               } catch (SQLException ex) {       
                  
                   JOptionPane.showMessageDialog(null, "Error al obtener los datos: "+ex, "Error", JOptionPane.ERROR_MESSAGE);
               }     
               
              
    } 

    
    
    
    public void vaciartablahistorico(){
            DefaultTableModel modelo=(DefaultTableModel) jthistorico.getModel();         
            for (int i = 0; i < jthistorico.getRowCount(); i++) {
                modelo.removeRow(i);
                i-=1;
            }    
    }
    
    public void cargartablahistorico(){    
        vaciartablahistorico();
        DefaultTableModel modelo=(DefaultTableModel) jthistorico.getModel();  
        conex con=new conex();   
        ResultSet rsR = null;       
        String tipomov=jctipomovimiento.getSelectedItem().toString();
        String sql="";
        
        Date fecha=txtfechaini.getDate();
        Date fecha2=txtfechafin.getDate();
        SimpleDateFormat fechaformateada = new SimpleDateFormat("yyyy-MM-dd");  
        String fechaini=fechaformateada.format(fecha);
        String fechafin=fechaformateada.format(fecha2);
        sql=" and fecha>='"+fechaini+" 00:00' and fecha<='"+fechafin+" 23:59'";
        if(tipomov.equals("Selecciona..")){            
        }else{
         sql=sql+" and tipo_mov='"+tipomov+"'";
        }
        String myQuery = "select fecha,nombre_producto,codigo_barras,cantidad_agregada,usuario_ajusto,tipo_mov from th_inventarios_registrados,tc_productos where idproducto=id_producto"+sql+" order by id_ajuste desc";
               //System.out.println(""+myQuery);
               try {
                   Statement st = con.getConnection().createStatement();
                   rsR = st.executeQuery(myQuery);
                   while(rsR.next()) {                                                
                            modelo.addRow(new Object[]{rsR.getString("fecha"),rsR.getString("nombre_producto"),rsR.getString("codigo_barras"),rsR.getString("cantidad_agregada"),rsR.getString("usuario_ajusto"),rsR.getString("tipo_mov")});                        
                   }                   
                   rsR.close(); 
                   st.close();
                   con.desconectar();
               } catch (SQLException ex) {       
                  
                   JOptionPane.showMessageDialog(null, "Error al obtener los datos: "+ex, "Error", JOptionPane.ERROR_MESSAGE);
               }     
               
              
    }
    
    
    public void vaciartablainventario(){
            DefaultTableModel modelo=(DefaultTableModel) jtproductosinventario.getModel();         
            for (int i = 0; i < jtproductosinventario.getRowCount(); i++) {
                modelo.removeRow(i);
                i-=1;
            }    
    }
    
    public void cargartablainventario(){    
        vaciartablainventario();
        DefaultTableModel modelo=(DefaultTableModel) jtproductosinventario.getModel();  
        conex con=new conex();   
        ResultSet rsR = null;        
        String myQuery = "select idproducto,codigo_barras,nombre_producto,precio_compra,precio_venta,existencia,cantidad_minima from tc_productos where estatus=1 order by nombre_producto asc";
               //System.out.println(""+myQuery);
               float sumatotal=0;
               float sumatotalalmacen=0;
               int cantidadtotal=0;
               try {
                   Statement st = con.getConnection().createStatement();
                   rsR = st.executeQuery(myQuery);
                   while(rsR.next()) {                                                
                            modelo.addRow(new Object[]{rsR.getString("idproducto"),rsR.getString("codigo_barras"),rsR.getString("nombre_producto"),rsR.getString("precio_compra"),rsR.getString("precio_venta"),rsR.getString("existencia"),rsR.getString("cantidad_minima")});                        
                            float cantidad=rsR.getFloat("existencia");
                            float precio=rsR.getFloat("precio_venta");                            
                            float preciocompra=rsR.getFloat("precio_compra");                            
                            float monto=cantidad*precio;                           
                            float montoalmacen=cantidad*preciocompra;                           
                            sumatotal=sumatotal+monto;
                            sumatotalalmacen=sumatotalalmacen+montoalmacen;
                            
                            cantidadtotal=cantidadtotal+rsR.getInt("existencia");
                   }   
                   
                   jlcantidad.setText(""+cantidadtotal);
                   //jlcosto.setText("$ "+sumatotal);                   
                   funciones redondeo=new funciones();
                   double tot=redondeo.redondearDecimales(sumatotal, 2);                                      
                   BigDecimal totl = new java.math.BigDecimal(tot); 
                   totl = totl.setScale(2, BigDecimal.ROUND_HALF_UP);//redondea a 2 digitos bigdecimal
                   
                   double tot2=redondeo.redondearDecimales(sumatotalalmacen, 2);                                      
                   BigDecimal totl2 = new java.math.BigDecimal(tot2); 
                   totl2 = totl2.setScale(2, BigDecimal.ROUND_HALF_UP);//redondea a 2 digitos bigdecimal
                   
                   jlcosto.setText("$ "+totl);
                   jlcostoalmacen.setText("$ "+totl2);
                   rsR.close(); 
                   st.close();
                   con.desconectar();
               } catch (SQLException ex) {       
                  
                   JOptionPane.showMessageDialog(null, "Error al obtener los datos: "+ex, "Error", JOptionPane.ERROR_MESSAGE);
               }     
               
        jtproductosinventario.getColumnModel().getColumn(0).setMaxWidth(0);
        jtproductosinventario.getColumnModel().getColumn(0).setMinWidth(0);
        jtproductosinventario.getColumnModel().getColumn(0).setPreferredWidth(0);
        jtproductosinventario.getColumnModel().getColumn(0).setWidth(0);
        
        jtproductosinventario.getColumnModel().getColumn(2).setMaxWidth(320);
        jtproductosinventario.getColumnModel().getColumn(2).setMinWidth(320);
        jtproductosinventario.getColumnModel().getColumn(2).setPreferredWidth(320);
        
        
        
        
    }
    
    
    public void exportarjTable(JTable tabla, File ficheroXLS) throws IOException {
        TableModel modelo = tabla.getModel();
        FileWriter fichero = new FileWriter(ficheroXLS);
        
        for(int i=0; i < modelo.getColumnCount(); i++) {
            fichero.write(modelo.getColumnName(i) + "\t");
        }
        fichero.write("\n");
        for(int i=0; i< modelo.getRowCount(); i++) {
            for(int j=0; j < modelo.getColumnCount(); j++) {
                String dato="";
                if(modelo.getValueAt(i,j)==null){
                }else{    
                dato=modelo.getValueAt(i,j).toString();
                }
                fichero.write(dato+"\t");
            }
            fichero.write("\n");
        }
        fichero.close();
    }
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JTextField idprod_reajuste;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JComboBox<String> jctipomovimiento;
    private javax.swing.JLabel jlcantidad;
    public static javax.swing.JLabel jlcantidadactual;
    public static javax.swing.JLabel jlcantidadreajuste;
    private javax.swing.JLabel jlcosto;
    private javax.swing.JLabel jlcostoalmacen;
    private javax.swing.JLabel jldiferencia;
    public static javax.swing.JLabel jlproducto;
    public static javax.swing.JLabel jlproductoreajuste;
    private javax.swing.JSpinner jscantidad;
    private javax.swing.JTextField jscantidad1;
    private javax.swing.JSpinner jsnuevacantidadreajuste;
    private javax.swing.JTextField jsnuevacantidadreajuste1;
    private javax.swing.JTable jtdiferencias;
    private javax.swing.JTable jthistorico;
    private javax.swing.JTable jtprodbajos;
    private javax.swing.JTable jtproductosinventario;
    private com.toedter.calendar.JDateChooser txtfechafin;
    private com.toedter.calendar.JDateChooser txtfechaini;
    public static javax.swing.JTextField txtidprod;
    private javax.swing.JTextField txtproducto;
    public static javax.swing.JTextField txtproductoreajuste;
    // End of variables declaration//GEN-END:variables


public void vaciartablainvfisico(){
            DefaultTableModel modelo=(DefaultTableModel) jtdiferencias.getModel();         
            for (int i = 0; i < jtdiferencias.getRowCount(); i++) {
                modelo.removeRow(i);
                i-=1;
            }    
    }
    
    public void cargartablainvfisico(){    
        vaciartablainvfisico();
        DefaultTableModel modelo=(DefaultTableModel) jtdiferencias.getModel();  
        conex con=new conex();   
        ResultSet rsR = null;     
        ResultSet rsR2=null;
        String myQuery = "select * from tc_productos where estatus=1";
               //System.out.println(""+myQuery);
               try {
                   Statement st = con.getConnection().createStatement();
                   Statement st2 = con.getConnection().createStatement();
                   rsR = st.executeQuery(myQuery);
                   while(rsR.next()) {  
                            float cantinv=0;
                            float cantsistema=rsR.getFloat("existencia");
                            boolean valida=false;
                            rsR2 = st2.executeQuery("select * from to_inventariofisico where idr_prod_inv='"+rsR.getString("idproducto")+"'");
                            if(rsR2.next()) {                                  
                                valida=true;
                            }
                            rsR2 = st2.executeQuery("select sum(cantidad) as total from to_inventariofisico where idr_prod_inv='"+rsR.getString("idproducto")+"'");
                            if(rsR2.next()) {                                  
                                cantinv=rsR2.getFloat("total");                                
                            }
                            float diferencias=cantinv-cantsistema;
                            String estatusinv="";
                            if(diferencias==0){
                                estatusinv="OK";
                            }
                            if(diferencias>0){
                                estatusinv="EXCEDENTE";
                            }
                            if(diferencias<0){
                                estatusinv="FALTANTE";
                            }
                            String inventariado="NO";
                            if(valida){
                                inventariado="SI";
                                modelo.addRow(new Object[]{rsR.getString("idproducto"),rsR.getString("codigo_barras"),rsR.getString("nombre_producto"),rsR.getString("existencia"),cantinv,diferencias,estatusinv,inventariado});                        
                            }else{
                                estatusinv="SIN INVENTARIAR";
                            }                            
                   }            
                   rsR2.close(); 
                   rsR.close(); 
                   st.close();
                   con.desconectar();
                   sorter = new TableRowSorter<TableModel>(modelo);
                   jtdiferencias.setRowSorter(sorter);
               } catch (SQLException ex) {       
                  
                   JOptionPane.showMessageDialog(null, "Error al obtener los datos: "+ex, "Error", JOptionPane.ERROR_MESSAGE);
               }     
               
              
    } 


    public boolean isNumberfloat(String s) {
        boolean isValid = true;
        try {
            Float.parseFloat(s);
        } catch(NumberFormatException nfe) {
            isValid = false;
        }
        return isValid;
    }
}
