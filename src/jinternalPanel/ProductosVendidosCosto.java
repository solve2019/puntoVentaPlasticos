/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package jinternalPanel;

import ClasesDAO.accesoSistema;
import Utilerias.funciones;
import conexion.conex;
import java.awt.Frame;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SpinnerNumberModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import jdialog.buscar_ajuste_inventario;
import jdialog.catalogo_productos;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 *
 * @author desarrollo8
 */
public class ProductosVendidosCosto extends javax.swing.JInternalFrame {

    /**
     * Creates new form Inventario
     */
    public ProductosVendidosCosto() {
        
        initComponents();
        Calendar c2 = new GregorianCalendar();
        txtfechaini.setCalendar(c2);
        txtfechafin.setCalendar(c2);
//        cargartabla();
        cargartablahistorico();        
        cargartablaprod();
        AutoCompleteDecorator.decorate(this.jcprod);
        
        
         if(accesoSistema.menufarmacia.equals("0")){            
            jthistorico.getColumnModel().getColumn(9).setMaxWidth(0);  //antibiotico
            jthistorico.getColumnModel().getColumn(9).setMinWidth(0);
            jthistorico.getColumnModel().getColumn(9).setPreferredWidth(0);
            jthistorico.getColumnModel().getColumn(9).setWidth(0);

            jthistorico.getColumnModel().getColumn(10).setMaxWidth(0); //lote de farmacia
            jthistorico.getColumnModel().getColumn(10).setMinWidth(0);
            jthistorico.getColumnModel().getColumn(10).setPreferredWidth(0);
            jthistorico.getColumnModel().getColumn(10).setWidth(0);
            
            jthistorico.getColumnModel().getColumn(11).setMaxWidth(0); //medico
            jthistorico.getColumnModel().getColumn(11).setMinWidth(0);
            jthistorico.getColumnModel().getColumn(11).setPreferredWidth(0);
            jthistorico.getColumnModel().getColumn(11).setWidth(0);
            
            jthistorico.getColumnModel().getColumn(12).setMaxWidth(0); //numero receta
            jthistorico.getColumnModel().getColumn(12).setMinWidth(0);
            jthistorico.getColumnModel().getColumn(12).setPreferredWidth(0);
            jthistorico.getColumnModel().getColumn(12).setWidth(0);
        }  
         
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel6 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jthistorico = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex) {
                return false; //Disallow the editing of any cell
            }
        };
        jButton8 = new javax.swing.JButton();
        jctipomovimiento = new javax.swing.JComboBox<>();
        jButton10 = new javax.swing.JButton();
        txtfechaini = new com.toedter.calendar.JDateChooser();
        txtfechafin = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jlmonto = new javax.swing.JLabel();
        jcprod = new javax.swing.JComboBox<>();

        setClosable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Inventario");

        jPanel2.setBackground(new java.awt.Color(249, 249, 249));

        //jTabbedPane1.setIconAt(0, new javax.swing.ImageIcon(getClass().getResource("/images/cliente.png")));
        jTabbedPane1.setBackground(new java.awt.Color(248, 244, 244));
        jTabbedPane1.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, new java.awt.Color(0, 0, 0), new java.awt.Color(102, 102, 102)));
        jTabbedPane1.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N

        jPanel6.setBackground(new java.awt.Color(248, 244, 244));

        jLabel20.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(51, 0, 204));
        jLabel20.setText("VENTAS DE PRODUCTOS");

        jLabel21.setText("A continuaci√≥n se muestra un listado con los movimientos de salida de productos: ");

        jthistorico.getTableHeader().setReorderingAllowed(false);
        jthistorico.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jthistorico.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fecha", "Folio", "Producto", "Codigo de Barras", "Cantidad", "Precio", "Descuento", "Total", "Utilidad", "Antibiotico", "Lote", "Doctor", "No. Receta", "Forma de Pago"
            }
        ));
        jthistorico.setRowHeight(22);
        jthistorico.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(jthistorico);

        jButton8.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/excel.png"))); // NOI18N
        jButton8.setText("Exporar");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jctipomovimiento.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SALIDA" }));
        jctipomovimiento.setVisible(false);

        jButton10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/buscar.png"))); // NOI18N
        jButton10.setText("Buscar");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 51, 153));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Del");

        jLabel11.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 51, 153));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("Al");

        jlmonto.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jlmonto.setForeground(new java.awt.Color(0, 51, 204));
        jlmonto.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jlmonto.setText("Total: $0.0");

        jcprod.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jcprod.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecciona.." }));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel20)
                            .addComponent(jLabel21))
                        .addGap(0, 316, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtfechaini, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtfechafin, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jcprod, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jctipomovimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jlmonto, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel21)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtfechaini, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtfechafin, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jctipomovimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                            .addComponent(jcprod))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 367, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlmonto, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane1.addTab("Reporte de Salidas de Producto", new javax.swing.ImageIcon(getClass().getResource("/images/Icono_libro.png")), jPanel6); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        cargartablahistorico();
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:

        Date fecha1=new Date();
        SimpleDateFormat formateador = new SimpleDateFormat("dd-MM-yyyy hh-MM-ss");
        //formateador.format(fecha1);
        System.out.println(formateador.format(fecha1));
        System.out.println(fecha1.toLocaleString());
        File archivo;

        javax.swing.JFileChooser jF1= new javax.swing.JFileChooser();
        String ruta = "";
        try{
            if(jF1.showSaveDialog(null)==jF1.APPROVE_OPTION){
                ruta = jF1.getSelectedFile().getAbsolutePath();
                //archivo = new File(ruta+""+formateador.format(fecha1)+".xls");
                archivo = new File(ruta+".xls");
                System.out.println(archivo);
                //Aqui ya tiens la ruta,,,ahora puedes crear un fichero n esa ruta y escribir lo k kieras...
                exportarjTable(jthistorico,archivo);
                JOptionPane.showMessageDialog(null, "El reporte se ha generado con exito", "Mensaje", JOptionPane.DEFAULT_OPTION);
            }
        }catch (Exception ex){
            JOptionPane.showMessageDialog(null, "No se ha podido generar el archivo:"+ex, "Error", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    
    public void cargadatos(String producto_code){              
        String codigo_barras=producto_code;
        conex con=new conex();          
        ResultSet rs = null;       
        String myQuery = "SELECT * FROM tc_productos WHERE codigo_barras='"+codigo_barras+"' and estatus=1";
        //System.out.println(""+myQuery);
        try {  
            Statement st = con.getConnection().createStatement();
            rs = st.executeQuery(myQuery);            
            if(rs.next()) {  
                //jlproducto.setText(rs.getString("nombre_producto"));
                //jlcantidadactual.setText(rs.getString("existencia"));    
                //txtidprod.setText(rs.getString("idproducto"));
            }
            rs.close(); 
            st.close();
            con.desconectar();   
            
          
             
        } catch (SQLException ex) {
        }
        //txtproducto.setText("");
    }
    
    public void cargadatosajuste(String producto_code){              
        String codigo_barras=producto_code;
        conex con=new conex();          
        ResultSet rs = null;       
        String myQuery = "SELECT * FROM tc_productos WHERE codigo_barras='"+codigo_barras+"' and estatus=1";
        //System.out.println(""+myQuery);
        try {  
            Statement st = con.getConnection().createStatement();
            rs = st.executeQuery(myQuery);            
            if(rs.next()) {  
               // jlproductoreajuste.setText(rs.getString("nombre_producto"));
               // jlcantidadreajuste.setText(rs.getString("existencia"));    
               // idprod_reajuste.setText(rs.getString("idproducto"));
            }
            rs.close(); 
            st.close();
            con.desconectar();   
            
          
             
        } catch (SQLException ex) {
        }
        //txtproductoreajuste.setText("");
    }
    
    /*public void vaciartabla(){
            DefaultTableModel modelo=(DefaultTableModel) jtprodbajos.getModel();         
            for (int i = 0; i < jtprodbajos.getRowCount(); i++) {
                modelo.removeRow(i);
                i-=1;
            }    
    }*/
    
    /*public void cargartabla(){    
        vaciartabla();
        DefaultTableModel modelo=(DefaultTableModel) jtprodbajos.getModel();  
        conex con=new conex();   
        ResultSet rsR = null;        
        String myQuery = "select * from tc_productos where estatus=1 and cantidad_minima>existencia";
               //System.out.println(""+myQuery);
               try {
                   Statement st = con.getConnection().createStatement();
                   rsR = st.executeQuery(myQuery);
                   while(rsR.next()) {                                                
                            modelo.addRow(new Object[]{rsR.getString("codigo_barras"),rsR.getString("nombre_producto"),rsR.getString("precio_venta"),rsR.getString("existencia"),rsR.getString("cantidad_minima")});                        
                   }                   
                   rsR.close(); 
                   st.close();
                   con.desconectar();
               } catch (SQLException ex) {       
                  
                   JOptionPane.showMessageDialog(null, "Error al obtener los datos: "+ex, "Error", JOptionPane.ERROR_MESSAGE);
               }     
               
              
    } */

    
    
    
    public void vaciartablahistorico(){
            DefaultTableModel modelo=(DefaultTableModel) jthistorico.getModel();         
            for (int i = 0; i < jthistorico.getRowCount(); i++) {
                modelo.removeRow(i);
                i-=1;
            }    
    }
    
    public void cargartablahistorico(){    
        vaciartablahistorico();
        DefaultTableModel modelo=(DefaultTableModel) jthistorico.getModel();  
        conex con=new conex();   
        ResultSet rsR = null;       
        String tipomov=jctipomovimiento.getSelectedItem().toString();
        String sql="";
        
        Date fecha=txtfechaini.getDate();
        Date fecha2=txtfechafin.getDate();
        SimpleDateFormat fechaformateada = new SimpleDateFormat("yyyy-MM-dd");  
        String fechaini=fechaformateada.format(fecha);
        String fechafin=fechaformateada.format(fecha2);
        
        String idproducto=jcprod.getSelectedItem().toString();
        if(idproducto.equals("Selecciona..")){
            idproducto="";
        }else{
            String[] temp=idproducto.split("-");
            String idprod=temp[1];
            idproducto=idprod;
        }
        String sqlaux="";
        if(!idproducto.equals("")){
            sqlaux=" and to_ventas.idproducto='"+idproducto+"'";
        }
        
        
        sql=" and fecha_mov>='"+fechaini+" 00:00' and fecha_mov<='"+fechafin+" 23:59'"+sqlaux;
        double total=0;
        String myQuery = "select fecha_mov,folio,nombre_producto,codigo_barras,cantidad,precio, (total-descuento) as total, descuento, utilidad, antibiotico, idr_lote,folio from to_ventas,tc_productos where to_ventas.cantidad>0 and to_ventas.idproducto=tc_productos.idproducto"+sql+" order by fecha_mov desc";
               System.out.println(""+myQuery);
               try {
                   Statement st = con.getConnection().createStatement();
                   Statement st2 = con.getConnection().createStatement();
                   rsR = st.executeQuery(myQuery);
                   ResultSet rsR2=null;
                   while(rsR.next()) {                                                
                            String esantibiotico=rsR.getString("antibiotico");
                            String antibio="NO";
                            if(esantibiotico.equals("1")){
                                antibio="SI";
                            }
                            String idlote=rsR.getString("idr_lote");
                            String lote="";
                            if(!idlote.equals("0")){                               
                                rsR2 = st2.executeQuery("select lote from farmacia_to_lotes where Id_lotes='"+idlote+"'");
                                while(rsR2.next()) {       
                                    lote=rsR2.getString("lote");
                                }                                
                            }
                            String medico="",numero_receta="",forma_pago="";
                            rsR2 = st2.executeQuery("select medico,numero_receta,forma_pago from to_folios where no_folio='"+rsR.getString("folio")+"'");
                            while(rsR2.next()) {       
                                    medico=rsR2.getString("medico");
                                    numero_receta=rsR2.getString("numero_receta");
                                    forma_pago=rsR2.getString("forma_pago");
                            }
                            
                            
                            
                            modelo.addRow(new Object[]{rsR.getString("fecha_mov"),rsR.getString("folio"),rsR.getString("nombre_producto"),rsR.getString("codigo_barras"),rsR.getString("cantidad"),rsR.getString("precio"),rsR.getString("descuento"),rsR.getString("total"),rsR.getString("utilidad"),antibio,lote,medico,numero_receta,forma_pago});                        
                            total=total+rsR.getFloat("total");
                   }      
                   funciones redondear=new funciones();
                   total=redondear.redondearDecimales(total, 2);
                   jlmonto.setText("Total: $"+total);
                   rsR.close(); 
                   st.close();
                   st2.close();
                   if(rsR2==null){
                   
                   }else{
                       rsR2.close();
                   }
                   
                   con.desconectar();
               } catch (SQLException ex) {       
                  
                   JOptionPane.showMessageDialog(null, "Error al obtener los datos: "+ex, "Error", JOptionPane.ERROR_MESSAGE);
               }     
               
              
    }
    
    
 
    
   
    
    
    public void exportarjTable(JTable tabla, File ficheroXLS) throws IOException {
        TableModel modelo = tabla.getModel();
        FileWriter fichero = new FileWriter(ficheroXLS);
        
        for(int i=0; i < modelo.getColumnCount(); i++) {
            fichero.write(modelo.getColumnName(i) + "\t");
        }
        fichero.write("\n");
        for(int i=0; i< modelo.getRowCount(); i++) {
            for(int j=0; j < modelo.getColumnCount(); j++) {
                fichero.write(modelo.getValueAt(i,j).toString()+"\t");
            }
            fichero.write("\n");
        }
        fichero.close();
    }
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JComboBox<String> jcprod;
    private javax.swing.JComboBox<String> jctipomovimiento;
    private javax.swing.JLabel jlmonto;
    private javax.swing.JTable jthistorico;
    private com.toedter.calendar.JDateChooser txtfechafin;
    private com.toedter.calendar.JDateChooser txtfechaini;
    // End of variables declaration//GEN-END:variables

public void cargartablaprod(){                    
        conex con=new conex();   
        ResultSet rsR = null;        
        String myQuery = "select * from tc_productos where estatus=1";
               //System.out.println(""+myQuery);                     
               try {
                   Statement st = con.getConnection().createStatement();
                   rsR = st.executeQuery(myQuery);
                   while(rsR.next()) {                                                
                            jcprod.addItem(rsR.getString("nombre_producto")+"-"+rsR.getString("idproducto"));                        
                   }                   
                   rsR.close(); 
                   st.close();
                   con.desconectar();
                   
               } catch (SQLException ex) {       
                  
                   JOptionPane.showMessageDialog(null, "Error al obtener los datos: "+ex, "Error", JOptionPane.ERROR_MESSAGE);
               }     
               
              
    }   

    
}
