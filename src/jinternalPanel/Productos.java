/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package jinternalPanel;

import ClasesDAO.TiketPDF;
import ClasesDAO.accesoSistema;
import Utilerias.funciones;
import conexion.conex;
import java.awt.Frame;
import java.awt.Image;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import jdialog.CargarProductos;
import jdialog.CargarfotoProd;
import jdialog.Cobrar_venta;
import jdialog.EdicionProducto;
import jdialog.NuevoProducto;
import jdialog.NuevoUsuario;

/**
 *
 * @author desarrollo8
 */
public class Productos extends javax.swing.JInternalFrame {
private static TableRowSorter<TableModel> sorter;
    /**
     * Creates new form Productos
     */
    public Productos() {
        initComponents();
             
        
        cargartabla();
        
        jtproductos.getColumnModel().getColumn(0).setMaxWidth(60);
        jtproductos.getColumnModel().getColumn(0).setMinWidth(60);
        jtproductos.getColumnModel().getColumn(0).setPreferredWidth(60);
        jtproductos.getColumnModel().getColumn(0).setWidth(60);
        
        jtproductos.getColumnModel().getColumn(2).setMaxWidth(265);
        jtproductos.getColumnModel().getColumn(2).setMinWidth(265);
        jtproductos.getColumnModel().getColumn(2).setPreferredWidth(265);
        jtproductos.getColumnModel().getColumn(2).setWidth(265);
        
        jtproductos.getColumnModel().getColumn(5).setMaxWidth(95);
        jtproductos.getColumnModel().getColumn(5).setMinWidth(95);
        jtproductos.getColumnModel().getColumn(5).setPreferredWidth(95);
        jtproductos.getColumnModel().getColumn(5).setWidth(95);
        
        jtproductos.getColumnModel().getColumn(11).setMaxWidth(65);
        jtproductos.getColumnModel().getColumn(11).setMinWidth(65);
        jtproductos.getColumnModel().getColumn(11).setPreferredWidth(65);
        jtproductos.getColumnModel().getColumn(11).setWidth(65);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtBusqueda = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtproductos = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex) {
                if(colIndex==13){ //Con esto se pueden editar todas las celdas menos la de la columna 0  colIndex==7 ||
                    return true;
                }
                else{
                    return false;
                }
            }
        };
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jlfoto = new javax.swing.JLabel();
        jlproducto = new javax.swing.JLabel();
        jlbarcode = new javax.swing.JLabel();
        jlprecioventa = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();

        jPopupMenu1.add(jMenuItem1);
        jPopupMenu1.add(jMenuItem2);
        jPopupMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPopupMenu1MouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPopupMenu1MousePressed(evt);
            }
        });

        jMenuItem3.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jMenuItem3.setText("Imprimir Masivo");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem3);

        jMenuItem1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/impresora.png"))); // NOI18N
        jMenuItem1.setLabel("Imprimir");
        jMenuItem1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuItem1MouseClicked(evt);
            }
        });
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });

        jMenuItem2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jMenuItem2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/imagen.png"))); // NOI18N
        jMenuItem2.setText("Cargar Foto");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });

        setTitle("CATÁLOGO DE PRODUCTOS");

        jPanel1.setBackground(new java.awt.Color(249, 247, 247));

        jLabel1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 51, 204));
        jLabel1.setText("Buscar en productos:");

        txtBusqueda.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txtBusqueda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBusquedaKeyPressed(evt);
            }
        });

        jtproductos.setRowHeight(26);
        jtproductos.getTableHeader().setReorderingAllowed(false) ;
        jtproductos.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jtproductos.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        jtproductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Código de Barras", "Producto", "Precio de Compra", "Precio de Venta", "Existencia", "Min Stock", "Categoria", "Precio Mayoreo", "Min Mayoreo", "Prod Comp", "Campo 1", "Campo 2", "Imprimir", "Clave SAT"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jtproductos.setComponentPopupMenu(jPopupMenu1);
        jtproductos.setRowHeight(22);
        jtproductos.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jtproductos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtproductosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtproductos);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/borrar.png"))); // NOI18N
        jButton1.setText("Eliminar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/edit.png"))); // NOI18N
        jButton2.setText("Editar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/mas.png"))); // NOI18N
        jButton3.setText("Nuevo");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/excel.png"))); // NOI18N
        jButton4.setText("Importar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 102, 204), 1, true));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jlfoto, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jlfoto, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jlproducto.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N

        jlbarcode.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N

        jlprecioventa.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/buscar.png"))); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jlproducto, javax.swing.GroupLayout.DEFAULT_SIZE, 371, Short.MAX_VALUE)
                            .addComponent(jlbarcode, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jlprecioventa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jlproducto, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(jlbarcode, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jlprecioventa, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtBusquedaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBusquedaKeyPressed
        // TODO add your handling code here:
        //filtrar();
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){ 
            
                cargartabla();
            
        }
        
        
    }//GEN-LAST:event_txtBusquedaKeyPressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
         int fila=-1;
            fila=jtproductos.getSelectedRow();
            if(fila!=-1){
                int opc=JOptionPane.showConfirmDialog(null, "¿Estas seguro de eliminar?","Alerta",JOptionPane.INFORMATION_MESSAGE);
                if(opc==JOptionPane.OK_OPTION){
                    String id=jtproductos.getValueAt(jtproductos.getSelectedRow(),0).toString();
                    conex con=new conex();                                               
                    try {
                        String myQuery = "update tc_productos set estatus=0,usuario_elimino='"+accesoSistema.nombreuser+"',fecha_baja=now() where idproducto='"+id+"'";
                        Statement st = con.getConnection().createStatement();
                        st.executeUpdate(myQuery);
                        st.close();
                        con.desconectar();
                        cargartabla();
                        JOptionPane.showMessageDialog(null, "El producto se elimino correctamente. ", "Producto eliminado", JOptionPane.PLAIN_MESSAGE);
                    } catch (SQLException ex) {       

                        JOptionPane.showMessageDialog(null, "Error al obtener los datos: "+ex, "Error", JOptionPane.ERROR_MESSAGE);
                    }   
                    
                }
            }else{
                JOptionPane.showMessageDialog(null,"Seleccione un producto de la Tabla","Alerta",JOptionPane.ERROR_MESSAGE);
            }
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        Frame f = JOptionPane.getFrameForComponent(this);
        NuevoProducto venta=new NuevoProducto(f,true);
        venta.show();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int fila=-1;
        fila=jtproductos.getSelectedRow();
        if(fila!=-1){
            String id=jtproductos.getValueAt(jtproductos.getSelectedRow(),0).toString();
            Frame f = JOptionPane.getFrameForComponent(this);
            EdicionProducto venta=new EdicionProducto(f,true,id);
            venta.show();

        }else{            
            //TiketPDF etiqueta=new TiketPDF();
            //etiqueta.imprimiretiqueta("coca cola", "44574423552");
            JOptionPane.showMessageDialog(null,"Seleccione un producto de la Tabla","Alerta",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        Frame f = JOptionPane.getFrameForComponent(this);
        CargarProductos venta=new CargarProductos(f,true);
        venta.show();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jPopupMenu1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPopupMenu1MouseClicked
        // TODO add your handling code here:     
       /* System.out.println("impresion");
         int fila=-1;
        fila=jtproductos.getSelectedRow();
        if(fila!=-1){
            String barcode=jtproductos.getValueAt(jtproductos.getSelectedRow(),1).toString();
            String desprod=jtproductos.getValueAt(jtproductos.getSelectedRow(),2).toString();
            if(barcode.equals("")){
                JOptionPane.showMessageDialog(null,"El producto no cuenta con codigo de barras.","Alerta",JOptionPane.ERROR_MESSAGE);
            }else{
                TiketPDF etiqueta=new TiketPDF();
                etiqueta.imprimiretiqueta(desprod, barcode);
            }            
        }else{                      
            JOptionPane.showMessageDialog(null,"Seleccione un producto de la Tabla para imprimir","Alerta",JOptionPane.ERROR_MESSAGE);
        }*/
        
    }//GEN-LAST:event_jPopupMenu1MouseClicked

    private void jPopupMenu1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPopupMenu1MousePressed
        // TODO add your handling code here:
       
    }//GEN-LAST:event_jPopupMenu1MousePressed

    private void jMenuItem1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem1MouseClicked
        // TODO add your handling code here:
        
       
    }//GEN-LAST:event_jMenuItem1MouseClicked

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
          System.out.println("impresion2");
         int fila=-1;
        fila=jtproductos.getSelectedRow();
        if(fila!=-1){
            String barcode=jtproductos.getValueAt(jtproductos.getSelectedRow(),1).toString();
            String desprod=jtproductos.getValueAt(jtproductos.getSelectedRow(),2).toString();
            String preciomenudeo=jtproductos.getValueAt(jtproductos.getSelectedRow(),4).toString();
            String preciomayoreo=jtproductos.getValueAt(jtproductos.getSelectedRow(),8).toString();
            if(barcode.equals("")){
                JOptionPane.showMessageDialog(null,"El producto no cuenta con codigo de barras.","Alerta",JOptionPane.ERROR_MESSAGE);
            }else{
                TiketPDF etiqueta=new TiketPDF();
                etiqueta.imprimiretiqueta(desprod, barcode,preciomenudeo,preciomayoreo);
            }            
        }else{                      
            JOptionPane.showMessageDialog(null,"Seleccione un producto de la Tabla para imprimir","Alerta",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
         System.out.println("cargar foto");
         int fila=-1;
        fila=jtproductos.getSelectedRow();
        if(fila!=-1){
            String id=jtproductos.getValueAt(jtproductos.getSelectedRow(),0).toString();
            String barcode=jtproductos.getValueAt(jtproductos.getSelectedRow(),1).toString();
            String desprod=jtproductos.getValueAt(jtproductos.getSelectedRow(),2).toString();            
            Frame f = JOptionPane.getFrameForComponent(this);
            CargarfotoProd fotos=new CargarfotoProd(f,true,id);
            fotos.show();      
        }else{                      
            JOptionPane.showMessageDialog(null,"Seleccione un producto de para cargar la foto","Alerta",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jtproductosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtproductosMouseClicked
        // TODO add your handling code here:
        int fila=-1;
        fila=jtproductos.getSelectedRow();
        if(fila!=-1){
            String id=jtproductos.getValueAt(jtproductos.getSelectedRow(),0).toString();
            String codbar=jtproductos.getValueAt(jtproductos.getSelectedRow(),1).toString();
            String prod=jtproductos.getValueAt(jtproductos.getSelectedRow(),2).toString();
            String precio=jtproductos.getValueAt(jtproductos.getSelectedRow(),4).toString();
            jlproducto.setText(""+prod);
            jlbarcode.setText(""+codbar);
            jlprecioventa.setText("$"+precio);
            funciones obtenimagen=new funciones();
            Image foto=obtenimagen.obtenImagenes("SELECT imagen FROM tc_productos where idproducto="+id);
            System.out.println("foto: "+foto);
            if(foto==null){
                jlfoto.setText("");
                jlfoto.setIcon(null);
                jPanel2.updateUI();
            }else{
                ImageIcon icon = new ImageIcon(foto.getScaledInstance(jlfoto.getWidth(), jlfoto.getHeight(), Image.SCALE_DEFAULT));
                jlfoto.setText("");
                jlfoto.setIcon(icon);
                jPanel2.updateUI();
            }
        }else{                        
        }
        
    }//GEN-LAST:event_jtproductosMouseClicked

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        String val="";
        TiketPDF etiqueta=new TiketPDF();
         for(int fila=0; fila<jtproductos.getRowCount(); fila++){               
               if(jtproductos.getValueAt(fila, 13)==null){
               }else{
                     
                    val=jtproductos.getValueAt(fila, 11).toString(); 
                    System.out.println(""+val);
                    if(val.equals("true")){
                    String barcode=jtproductos.getValueAt(fila,1).toString();
                    String desprod=jtproductos.getValueAt(fila,2).toString();
                    String preciomenudeo=jtproductos.getValueAt(fila,4).toString();
                    String preciomayoreo=jtproductos.getValueAt(fila,8).toString();
                    if(barcode.equals("")){
                        //JOptionPane.showMessageDialog(null,"El producto no cuenta con codigo de barras.","Alerta",JOptionPane.ERROR_MESSAGE);
                    }else{
                        
                        etiqueta.imprimiretiquetadirecto(desprod, barcode,preciomenudeo,preciomayoreo);
                    }   
                        
                    }
                    
               }
               
               
       }
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        System.out.println("boton");
         cargartabla();
    }//GEN-LAST:event_jButton5ActionPerformed

     public static void vaciartabla(){
            DefaultTableModel modelo=(DefaultTableModel) jtproductos.getModel();         
            for (int i = 0; i < jtproductos.getRowCount(); i++) {
                modelo.removeRow(i);
                i-=1;
            }    
    }
    
    public static String cargarcate(String idcate,Statement st){
        String categoria="";
        if(idcate==null){
        }else{
                   
                    ResultSet rsR = null;        
                    String myQuery = "select nombre from tc_categorias where Idcategoria='"+idcate+"'";               
                   try {
                       //Statement st = con.getConnection().createStatement();
                       rsR = st.executeQuery(myQuery);
                       if(rsR.next()) {  
                            categoria=rsR.getString("nombre");
                       }                  
                       rsR.close();                                         
                   } catch (SQLException ex) {                         
                       JOptionPane.showMessageDialog(null, "Error al obtener los datos: "+ex, "Error", JOptionPane.ERROR_MESSAGE);
                   } 
            }
    return categoria;
    } 
     
    public static void cargartabla(){   
        funciones funct=new funciones();
        double iva=1+funct.obteniva();  
        vaciartabla();
        String buscar=txtBusqueda.getText().trim();
        DefaultTableModel modelo=(DefaultTableModel) jtproductos.getModel();  
        conex con=new conex();   
        ResultSet rsR = null;        
        String sqlaux="";
        if(buscar.equals("")){
        }else{
            sqlaux=sqlaux+" and (nombre_producto like '%"+buscar+"%' or codigo_barras like '%"+buscar+"%' or campo1 like '%"+buscar+"%' or campo2 like '%"+buscar+"%')";
        }
        String myQuery = "select * from tc_productos where estatus='1'"+sqlaux+" limit 2000";
               System.out.println(""+myQuery);
               try {
                   Statement st = con.getConnection().createStatement();
                   Statement st2 = con.getConnection().createStatement();
                   rsR = st.executeQuery(myQuery);
                   while(rsR.next()) {  
                            String categoria=cargarcate(rsR.getString("idrcategoria"),st2);
                            
                            double precioventa=iva*rsR.getDouble("precio_venta");
                            precioventa=funct.redondearDecimales(precioventa, 2);                            
                            double preciomayoreo=iva*rsR.getDouble("precio_mayoreo");                            
                            preciomayoreo=funct.redondearDecimales(preciomayoreo, 2);
                            modelo.addRow(new Object[]{rsR.getString("idproducto"),rsR.getString("codigo_barras"),rsR.getString("nombre_producto"),rsR.getString("precio_compra"),precioventa,rsR.getString("existencia"),rsR.getString("cantidad_minima"),categoria,preciomayoreo,rsR.getString("cantidad_mayoreo"),rsR.getString("prodcompuesto"),rsR.getString("campo1"),rsR.getString("campo2"),false,rsR.getString("idr_concep_sat")});                        
                   }
                   sorter = new TableRowSorter<TableModel>(modelo);
                   jtproductos.setRowSorter(sorter);
                   rsR.close(); 
                   st2.close();
                   st.close();
                   con.desconectar();
               } catch (SQLException ex) {       
                  
                   JOptionPane.showMessageDialog(null, "Error al obtener los datos: "+ex, "Error", JOptionPane.ERROR_MESSAGE);
               }     
               
              
    } 
    private void filtrar() {
        
         RowFilter<TableModel, Object> rf = null;
        try {
            rf = RowFilter.regexFilter("(?i)"+txtBusqueda.getText(),1,2,7);
        }catch (java.util.regex.PatternSyntaxException e) {
        }
        sorter.setRowFilter(rf);
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel jlbarcode;
    private javax.swing.JLabel jlfoto;
    private javax.swing.JLabel jlprecioventa;
    private javax.swing.JLabel jlproducto;
    private static javax.swing.JTable jtproductos;
    private static javax.swing.JTextField txtBusqueda;
    // End of variables declaration//GEN-END:variables
}
