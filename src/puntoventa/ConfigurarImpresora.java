/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package puntoventa;

import java.awt.print.PrinterJob;
import java.io.ByteArrayInputStream;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.List;
import javax.print.Doc;
import javax.print.DocFlavor;
import javax.print.DocPrintJob;
import javax.print.PrintException;
import javax.print.PrintService;
import javax.print.PrintServiceLookup;
import javax.print.SimpleDoc;
import javax.print.attribute.AttributeSet;
import javax.print.attribute.HashAttributeSet;
import javax.print.attribute.standard.PrinterName;
import javax.swing.JOptionPane;

/**
 *
 * @author desarrollo8
 */
public class ConfigurarImpresora extends javax.swing.JFrame {

    /**
     * Creates new form ConfigurarImpresora
     */
    public ConfigurarImpresora() {
        initComponents();
        PrinterServiceNameList();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jcimpresoras = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Configuraci√≥n de Impresora");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(249, 248, 248));

        jButton1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jButton1.setText("Guardar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jcimpresoras.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jcimpresoras.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecciona.." }));

        jLabel1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel1.setText("IMPRESORAS:");

        jLabel2.setText("Selecciona la impresora para imprimir los ticket.");

        jButton2.setText("Imprimir");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jcimpresoras, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 20, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jcimpresoras, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addContainerGap())))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        imprimir2();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConfigurarImpresora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConfigurarImpresora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConfigurarImpresora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConfigurarImpresora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConfigurarImpresora().setVisible(true);
            }
        });
    }

 public List<String> PrinterServiceNameList() {

        // get list of all print services
        PrintService[] services = PrinterJob.lookupPrintServices();
        List<String> list = new ArrayList<String>();

        for (int i = 0; i < services.length; i++) {
            jcimpresoras.addItem(services[i].getName());
            System.out.println("Impresora: "+services[i].getName());
            list.add(services[i].getName());
        }

        return list;
    }    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JComboBox<String> jcimpresoras;
    // End of variables declaration//GEN-END:variables

public void imprimir1(){
        char[] initEP = new char[]{0x1b, '@'};
        char[] cutP = new char[]{0x1d,'V',1};
        String Ptxt=  new String(initEP)+ " text data \n \n \n"+ new String(cutP);
        
        String imprime=Ptxt;
        String impresora=jcimpresoras.getSelectedItem().toString();
        AttributeSet aset = new HashAttributeSet();
        aset.add(new PrinterName(impresora, null));
        
        PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, aset);
        System.out.println(printService.length);
        //PrintService printService = PrintServiceLookup.lookupDefaultPrintService();
        if(printService.length>0){
            DocFlavor flavor = DocFlavor.BYTE_ARRAY.AUTOSENSE;
            DocPrintJob docPrintJob = printService[0].createPrintJob();
            Doc doc=new SimpleDoc(imprime.getBytes(),flavor,null);
            //System.out.println("tipoE: "+tipo);
            System.out.println(imprime);
            try {
            docPrintJob.print(doc, null);
            }
            catch (PrintException e) {
            System.out.println("Error al imprimir: "+e.getMessage());
             JOptionPane.showMessageDialog(null, "Error al imprimir. "+e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }else{
            JOptionPane.showMessageDialog(null, "No hay impresoras seleccionadas. ", "Advertencia", JOptionPane.ERROR_MESSAGE);
        }
       
}


public void imprimir2(){
        /*char ESC_CHAR = 0x1B;
        char GS = 0x1D;
        byte[] LINE_FEED = new byte[]{0x0A};
        byte[] CUT_PAPER = new byte[]{GS, 0x56, 0x00};
        byte[] INIT_PRINTER = new byte[]{ESC_CHAR, 0x40};
        byte[] SELECT_BIT_IMAGE_MODE = {0x1B, 0x2A, 33};
        byte[] SET_LINE_SPACE_24 = new byte[]{ESC_CHAR, 0x33, 24};
        */
        char ESC_CHAR = 0x1B;
        char[] initEP = new char[]{0x1B,64,10};
        char[] cutP = new char[]{0x1d,'V',1};
        String Ptxt=  new String(initEP)+ " text data \n \n \n";
        //Ptxt="pruebas";
        String imprime=Ptxt;
        String impresora=jcimpresoras.getSelectedItem().toString();
        AttributeSet aset = new HashAttributeSet();
        aset.add(new PrinterName(impresora, null));
        
        PrintService service = PrintServiceLookup.lookupDefaultPrintService(); 
 //       System.out.println(printService.length);//
        //PrintService printService = PrintServiceLookup.lookupDefaultPrintService();
        //if(printService.length>0){
            DocFlavor flavor = DocFlavor.BYTE_ARRAY.AUTOSENSE;
            DocPrintJob pj = service.createPrintJob();             
            
            InputStream pis = new ByteArrayInputStream(Ptxt.getBytes());
            //Doc doc = new SimpleDoc(pis, flavor, null);
            Doc doc=new SimpleDoc(imprime.getBytes(),flavor,null);
            //System.out.println("tipoE: "+tipo);
            System.out.println(imprime);
            try {
            pj.print(doc, null);
            }
            catch (PrintException e) {
            System.out.println("Error al imprimir: "+e.getMessage());
             JOptionPane.showMessageDialog(null, "Error al imprimir. "+e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        //}else{
        //    JOptionPane.showMessageDialog(null, "No hay impresoras seleccionadas. ", "Advertencia", JOptionPane.ERROR_MESSAGE);
       // }
       
}

}
