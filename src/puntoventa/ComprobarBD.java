/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package puntoventa;

import conexion.conex;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;

/**
 *
 * @author desarrollo8
 */
public class ComprobarBD extends javax.swing.JFrame {

    /**
     * Creates new form ComprobarBD
     */
    public ComprobarBD() {
        initComponents();
         conex con=new conex();
        try {
            Statement st = con.getConnection().createStatement();
            String myQuery = "select parametro from to_parametros where clave='SMARTWEBUSER'";                
            ResultSet rs=st.executeQuery(myQuery);
            if(rs.next()){
                txtusuariofactura.setText(rs.getString("parametro"));
            }
            myQuery = "select parametro from to_parametros where clave='SMARTWEBCONTRA'";                
            rs=st.executeQuery(myQuery);
            if(rs.next()){
                txtcontrafactura.setText(rs.getString("parametro"));
            }
            rs.close();
            st.close();
            con.desconectar();           
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Hubo un error en la validacion de la BD: "+ex, "Error verificacion BD", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtusuariofactura = new javax.swing.JTextField();
        txtcontrafactura = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Comprobacion de Base de datos");

        jPanel1.setBackground(new java.awt.Color(252, 248, 248));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/server.png"))); // NOI18N
        jButton1.setText("Comprobar BASE DE DATOS");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("USUARIO FACTURA:");

        jLabel2.setText("CONTRASEÑA FACTURA:");

        jButton2.setText("Guardar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(104, 104, 104)
                        .addComponent(jButton1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtusuariofactura)
                            .addComponent(txtcontrafactura, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(81, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(77, 77, 77)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtusuariofactura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtcontrafactura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        conex con=new conex();
        try {
            
            Statement st = con.getConnection().createStatement();
            
            
            //########################  tabla to_inventariofisico ##############
            String myQuery = "SHOW TABLES LIKE 'to_inventariofisico'";
            ResultSet rs=st.executeQuery(myQuery);
            if(rs.next()){
            }else{//no existe se crea
                myQuery = "CREATE TABLE to_inventariofisico (" +
                            "  `Id_inv` int(11) NOT NULL auto_increment," +
                            "  `idr_prod_inv` int(11) default NULL," +
                            "  `cantidad` float(9,2) default '0.00'," +
                            "  `fecha_inventario` datetime default NULL," +
                            "  `usuario_inventario` varchar(150) default NULL," +
                            "  PRIMARY KEY  (`Id_inv`)\n" +
                            ") ENGINE=MyISAM DEFAULT CHARSET=utf8;";
                System.out.println(""+myQuery);
                st.executeUpdate(myQuery);                
            }
            
            
            //########################  tabla tc_regimenfiscal ##############
            myQuery = "SHOW TABLES LIKE 'tc_regimenfiscal'";
            rs=st.executeQuery(myQuery);
            if(rs.next()){
            }else{//no existe se crea
                myQuery = "CREATE TABLE `tc_regimenfiscal` (\n" +
                        "  `Idregimen` int(11) NOT NULL auto_increment,\n" +
                        "  `clave` varchar(15) default NULL,\n" +
                        "  `descripcion` varchar(70) default NULL,\n" +
                        "  PRIMARY KEY  (`Idregimen`)\n" +
                        ") ENGINE=MyISAM DEFAULT CHARSET=utf8;";
                //System.out.println(""+myQuery);
                st.executeUpdate(myQuery);
                myQuery = "INSERT INTO tc_regimenfiscal VALUES (1,'601','General de Ley Personas Morales'),(2,'612','Personas Físicas con Actividades Empresariales y Profesionales'),(3,'621','Incorporación Fiscal'),(4,'603','Personas Morales con Fines no Lucrativos'),(5,'605','Sueldos y Salarios e Ingresos Asimilados a Salarios'),(6,'606','Arrendamiento'),(7,'608','Demás ingresos'),(8,'609','Consolidación'),(9,'610','Residentes en el Extranjero sin Establecimiento Permanente en México'),(10,'611','Ingresos por Dividendos (socios y accionistas)'),(11,'614','Ingresos por intereses'),(12,'616','Sin obligaciones fiscales'),(13,'620','Sociedades Cooperativas de Producción que optan por diferir sus ingres'),(14,'622','Actividades Agrícolas, Ganaderas, Silvícolas y Pesqueras'),(15,'623','Opcional para Grupos de Sociedades'),(16,'624','Coordinados'),(17,'628','Hidrocarburos'),(18,'607','Régimen de Enajenación o Adquisición de Bienes'),(19,'629','De los Regímenes Fiscales Preferentes y de las Empresas Multinacionale'),(20,'630','Enajenación de acciones en bolsa de valores'),(21,'615','Régimen de los ingresos por obtención de premios');";
                //System.out.println(""+myQuery);
                st.executeUpdate(myQuery);
            }
            
            //########################  tabla to_errores_correo ##############
            myQuery = "SHOW TABLES LIKE 'to_errores_correo'";
            rs=st.executeQuery(myQuery);
            if(rs.next()){
            }else{//no existe se crea
                myQuery = "CREATE TABLE `to_errores_correo` (" +
                "  `Iderrores` int(11) NOT NULL auto_increment," +
                "  `fecha` datetime default NULL," +
                "  `descripcion` varchar(355) default NULL," +
                "  PRIMARY KEY  (`Iderrores`)" +
                ") ENGINE=MyISAM AUTO_INCREMENT=3 DEFAULT CHARSET=utf8;";
                //System.out.println(""+myQuery);
                st.executeUpdate(myQuery);                
            }
            
            
            
            
            //########################  tabla fact_concepto_productos ##############
            myQuery = "SHOW TABLES LIKE 'fact_concepto_productos'";
            rs=st.executeQuery(myQuery);
            if(rs.next()){
            }else{//no existe se crea
                myQuery = "CREATE TABLE fact_concepto_productos (" +
                            "  `IdConceptos` int(11) NOT NULL auto_increment," +
                            "  `clave_prod` varchar(25) default NULL," +
                            "  `clave_unidad` varchar(20) default NULL," +
                            "  `Unidad` varchar(20) default NULL," +
                            "  `descripcion` varchar(90) default NULL," +
                            "  `tipogiro` varchar(50) default NULL," +
                            "  PRIMARY KEY  (`IdConceptos`)" +
                            ") ENGINE=MyISAM AUTO_INCREMENT=66 DEFAULT CHARSET=utf8;";
                //System.out.println(""+myQuery);
                st.executeUpdate(myQuery);
                myQuery = "INSERT INTO fact_concepto_productos VALUES (1,'43201800','H87','Pieza','Dispositivos de almacenamiento','Celulares'),(2,'78121500','E48','Unidad de servicio','Empaque','Trans_Carga'),(3,'78121501','E48','Unidad de servicio','Contenedorización de mercancías','Trans_Carga'),(4,'78121502','E48','Unidad de servicio','Servicios de embalaje','Trans_Carga'),(5,'78121600','E48','Unidad de servicio','Servicios de manejo de materiales','Trans_Carga'),(6,'78121601','E48','Unidad de servicio','Carga y descarga de mercancías','Trans_Carga'),(7,'78121602','E48','Unidad de servicio','Servicios de pesaje','Trans_Carga'),(8,'78101800','E48','Unidad de servicio','Transporte de carga por carretera    ESTE ES EL GENERAL','Trans_Carga'),(9,'78101801','E48','Unidad de servicio','Servicios de transporte de carga por carretera (en camión) en área local','Trans_Carga'),(10,'50201712','H87','Pieza','Bebidas de té','Cafeteria'),(11,'50202301','H87','Pieza','Agua','Cafeteria'),(12,'50202305','H87','Pieza','Jugo fresco','Cafeteria'),(13,'50202306','H87','Pieza','Refrescos','Cafeteria'),(14,'50202307','H87','Pieza','Bebida de chocolate o malta u otros','Cafeteria'),(15,'50202400','H87','Pieza','Jugos o concentrados de cítricos frescos','Cafeteria'),(16,'50201708','H87','Pieza','Bebida de café','Cafeteria'),(17,'50201715','H87','Pieza','Té de frutas','Cafeteria'),(18,'50181900','H87','Pieza',' Pan, galletas y pastelitos dulces','Cafeteria'),(19,'50181901','H87','Pieza','Pan fresco','Cafeteria'),(20,'50182000','H87','Pieza','Tartas y empanadas y pastas','Cafeteria'),(21,'50182001','H87','Pieza','Panqués pasteles o biscochos frescos','Cafeteria'),(22,'50192500','H87','Pieza','Sándwiches y panecillos con relleno','Cafeteria'),(23,'50192501','H87','Pieza','Emparedados frescos','Cafeteria'),(24,'50192700','H87','Pieza','Platos combinados empaquetados','Cafeteria'),(25,'50131700','H87','Pieza','Productos de leche y mantequilla','Cafeteria'),(26,'50192303','H87','Pieza','Helado de sabor o helado o postre de helado o yogurt congelado','Cafeteria'),(27,'50111513','KGM','Kilogramo','Carne, mínimamente procesada sin aditivos','Carniceria'),(28,'50111514','KGM','Kilogramo','Cerdo, mínimamente procesado sin aditivos','Carniceria'),(29,'50111521','KGM','Kilogramo','Pavo, mínimamente procesado sin aditivos','Carniceria'),(30,'50111515','KGM','Kilogramo','Pollo, mínimamente procesado sin aditivos','Carniceria'),(31,'50111523','KGM','Kilogramo','Cordero , mínimamente procesado sin aditivos','Carniceria'),(32,'50111517','KGM','Kilogramo','Ternera, mínimamente procesado sin aditivos','Carniceria'),(33,'50121500','KGM','Kilogramo','Pescado','Carniceria'),(34,'78111807','E48','Unidad de servicio','Tarifas del parqueadero','Estacionamiento'),(35,'43191501','H87','Pieza','Teléfonos móviles','Celulares'),(36,'43191606','H87','Pieza','Auriculares de teléfonos','Celulares'),(38,'43191600','H87','Pieza',' Partes o accesorios de dispositivos de comunicación personal','Celulares'),(39,'43191631','H87','Pieza','Clavijas de adaptadores o kits de campo o kits de viaje para teléfonos o módems','Celulares'),(40,'81112100','E20','Megabit por segundo','Servicios de internet','Celulares'),(41,'83111603','E48','Unidad de servicio','Servicios de telefonía celular','Celulares'),(42,'51101500','H87','Pieza','Medicinas','Farmacia'),(43,'85121502','E48','Unidad de servicio','Servicios de consulta de médicos de atención primaria','Farmacia'),(44,'41121800','H87','Pieza','Utensilios de laboratorio ','Farmacia'),(45,'42182200','H87','Pieza','Termómetros médicos y accesorios','Farmacia'),(46,'42311500','H87','Pieza','Vendas y vendajes y productos relacionados','Farmacia'),(47,'42312005','H87','Pieza','Adhesivos o pegamentos de cierre de piel para uso médico','Farmacia'),(48,'53131620','H87','Pieza','Perfumes o colonias o fragancias','Farmacia'),(49,'53131621','H87','Pieza','Corta uñas','Farmacia'),(50,'53131622','H87','Pieza','Condones','Farmacia'),(51,'53131623','H87','Pieza','Productos depilatorios o para remover vello','Farmacia'),(52,'53131624','H87','Pieza','Paños limpiadores desechables','Farmacia'),(53,'53131625','H87','Pieza','Redecillas para el cabello o la barba','Farmacia'),(54,'53131626','H87','Pieza',' Desinfectante de manos','Farmacia'),(55,'53131627','H87','Pieza','Limpiador de manos','Farmacia'),(56,'53131628','H87','Pieza','Champús','Farmacia'),(57,'60141001','H87','Pieza','Globos o pelotas de juguete','Fiestas'),(58,'60141000','H87','Pieza','Jugetes','Fiestas'),(59,'60141014','H87','Pieza','Yoyo','Fiestas'),(60,'60141018','H87','Pieza','Pompones','Fiestas'),(61,'60141019','H87','Pieza','Pinatas','Fiestas'),(62,'60121116','H87','Pieza','Papel crepe para manualidades','Papeleria'),(63,'60121202','E48','Unidad de servicio','Helio','Fiestas'),(64,'60121211','H87','Pieza','Bisuteria','Papeleria'),(65,'01010101','H87','Pieza','No existe en el catalogo','No Existe');";
                //System.out.println(""+myQuery);
                st.executeUpdate(myQuery);
            }
            
            
            
            //########################  tc_prod_compuesto ##############
            myQuery = "SHOW TABLES LIKE 'tc_prod_compuesto'";
            rs=st.executeQuery(myQuery);
            if(rs.next()){
            }else{//no existe se crea
                myQuery = "CREATE TABLE tc_prod_compuesto (" +
                        "  `IdCompuesto` int(7) NOT NULL auto_increment," +
                        "  `Idr_productoPrimario` int(11) default NULL COMMENT 'ES EL ID DE LA TABLA PRODUCTOS EL MASTER'," +
                        "  `Id_prod_secundario` int(11) default NULL COMMENT 'Id del producto secundario'," +
                        "  `cant_utiliza` float(8,2) default '0.00'," +
                        "  PRIMARY KEY  (`IdCompuesto`)" +
                        ") ENGINE=MyISAM DEFAULT CHARSET=utf8;";
                //System.out.println(""+myQuery);
                st.executeUpdate(myQuery);               
            }
            
            
            
            
            
            //########################  to_pos_venta ##############
            myQuery = "SHOW TABLES LIKE 'to_pos_venta'";
            rs=st.executeQuery(myQuery);
            if(rs.next()){
            }else{//no existe se crea
                myQuery = "CREATE TABLE `to_pos_venta` (" +
                "  `Idposventa` int(11) NOT NULL auto_increment," +
                "  `folio` varchar(20) default NULL," +
                "  `codbar` varchar(40) default NULL," +
                "  `descprod` varchar(60) default NULL," +
                "  `preciounitario` varchar(15) default NULL," +
                "  `cantidad` varchar(15) default NULL," +
                "  `importe` varchar(15) default NULL," +
                "  `existencia` varchar(20) default NULL," +
                "  `idprod` varchar(20) default NULL," +
                "  `descuento` varchar(20) default NULL," +
                "  `ieps` varchar(20) default NULL," +
                "  `fecha` datetime default NULL," +
                "  `persona_atendio` varchar(120) default NULL," +
                "  `tipo_venta` varchar(30) default NULL COMMENT 'POSVENTA, VENTATEMPORAL'," +
                "  PRIMARY KEY  (`Idposventa`)" +
                ") ENGINE=MyISAM DEFAULT CHARSET=utf8;";
                //System.out.println(""+myQuery);
                st.executeUpdate(myQuery);               
            }
            
            
            
            
            
            //########################  tc_categorias ##############
            myQuery = "SHOW TABLES LIKE 'tc_categorias'";
            rs=st.executeQuery(myQuery);
            if(rs.next()){
            }else{//no existe se crea
                myQuery = "CREATE TABLE tc_categorias (" +
                        "  `Idcategoria` int(4) NOT NULL auto_increment," +
                        "  `nombre` varchar(60) default NULL," +
                        "  `descripcion` varchar(255) default NULL," +
                        "  `estatus` int(1) default '1'," +
                        "  `usuario_elimino` varchar(120) default NULL," +
                        "  `fecha_baja` date default NULL," +
                        "  PRIMARY KEY  (`Idcategoria`)" +
                        ") ENGINE=MyISAM DEFAULT CHARSET=utf8;";
                //System.out.println(""+myQuery);
                st.executeUpdate(myQuery);               
            }
            
            
            
            //########################  to_datos_facturacion ##############
            myQuery = "SHOW TABLES LIKE 'to_datos_facturacion'";
            rs=st.executeQuery(myQuery);
            if(rs.next()){
            }else{//no existe se crea
                myQuery = "CREATE TABLE to_datos_facturacion (" +
                        "  `id_datos` int(11) NOT NULL auto_increment," +
                        "  `rfc` varchar(20) default NULL," +
                        "  `razonsocial` varchar(100) default NULL," +
                        "  `calle` varchar(80) default NULL," +
                        "  `colonia` varchar(80) default NULL," +
                        "  `ciudad` varchar(90) default NULL," +
                        "  `estado` varchar(80) default NULL," +
                        "  `pais` varchar(50) default NULL," +
                        "  `cp` varchar(7) default NULL," +
                        "  `lugarexpedicion` varchar(100) default NULL," +
                        "  `clave_privada` varchar(40) default NULL," +
                        "  `nocertificado` varchar(30) default NULL," +
                        "  `iva` varchar(5) default NULL," +
                        "  `datoscancelacion` mediumtext," +
                        "  `RegimenFiscal` varchar(15) default NULL," +
                        "  PRIMARY KEY  (`id_datos`)" +
                        ") ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;";
                //System.out.println(""+myQuery);
                st.executeUpdate(myQuery);   
                myQuery = "INSERT INTO `to_datos_facturacion` VALUES (1,'','','','','','','','','','','','16.00',NULL,'612');";
                st.executeUpdate(myQuery); 
            }
            
            
            
            //########################  rest_mesas ##############
            myQuery = "SHOW TABLES LIKE 'rest_mesas'";
            rs=st.executeQuery(myQuery);
            if(rs.next()){
            }else{//no existe se crea
                myQuery = "CREATE TABLE rest_mesas (" +
                "  `IdMesa` int(11) NOT NULL auto_increment," +
                "  `Nombre` varchar(20) default NULL," +
                "  `estatus` varchar(15) default 'LIBRE' COMMENT 'LIBRE,OCUPADA'," +
                "  `esteliminacion` int(1) default '1'," +
                "  PRIMARY KEY  (`IdMesa`)" +
                ") ENGINE=MyISAM AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;";
                st.executeUpdate(myQuery);                   
            }
            
            
            //########################  rest_temp_venta ##############
            myQuery = "SHOW TABLES LIKE 'rest_temp_venta'";
            rs=st.executeQuery(myQuery);
            if(rs.next()){
            }else{//no existe se crea
                myQuery = "CREATE TABLE rest_temp_venta (" +
                "  `Idtemp` int(11) NOT NULL auto_increment," +
                "  `idrmesa` int(5) default NULL," +
                "  `cantidad` float(8,2) default '0.00'," +
                "  `descripcion` varchar(120) default NULL," +
                "  `idrproducto` int(11) default NULL," +
                "  `precio_venta` float(8,2) default '0.00'," +
                "  `total` float(8,2) default '0.00'," +
                "  `impreso` int(1) default '1'," +
                "  `observacion` varchar(150) default NULL," +
                "  PRIMARY KEY  (`Idtemp`)" +
                ") ENGINE=MyISAM DEFAULT CHARSET=utf8;";
                st.executeUpdate(myQuery);                   
            }
            
            
            //########################  proveedor_tc ##############
            myQuery = "SHOW TABLES LIKE 'proveedor_tc'";
            rs=st.executeQuery(myQuery);
            if(rs.next()){
            }else{//no existe se crea
                myQuery = "CREATE TABLE proveedor_tc (" +
                "  `IdProveedor` int(11) NOT NULL auto_increment," +
                "  `nombreProveedor` varchar(120) default NULL," +
                "  `tel` varchar(15) default NULL," +
                "  `direccion` varchar(150) default NULL," +
                "  `estado` varchar(35) default NULL," +
                "  `cp` varchar(6) default NULL," +
                "  `colonia` varchar(45) default NULL," +
                "  `rfcProveedor` varchar(15) default NULL," +
                "  `fechaRegistro` date default NULL," +
                "  `estatus_proveedor` int(1) default '1'," +
                "  PRIMARY KEY  (`IdProveedor`)" +
                ") ENGINE=InnoDB DEFAULT CHARSET=utf8;";
                st.executeUpdate(myQuery);                   
            }
            
            //########################  proveedor_to_compra ##############
            myQuery = "SHOW TABLES LIKE 'proveedor_to_compra'";
            rs=st.executeQuery(myQuery);
            if(rs.next()){
            }else{//no existe se crea
                myQuery = "CREATE TABLE proveedor_to_compra (" +
                "  `IdCompraFolio` int(11) NOT NULL auto_increment," +
                "  `IdProveedor` int(11) default NULL," +
                "  `fecha_registro` datetime default NULL," +
                "  `FolioCompra` int(11) default NULL," +
                "  `monto_compra` double(8,2) default NULL," +
                "  `usuario_registro` varchar(150) default NULL," +
                "  `fecha_cancelacion` datetime default NULL," +
                "  `usuarioCancelo` varchar(150) default NULL," +
                "  `estatuscompra` int(1) default '1' COMMENT '1.- ACTIVA  2.-CANCELADA'," +
                "  PRIMARY KEY  (`IdCompraFolio`)" +
                ") ENGINE=InnoDB DEFAULT CHARSET=utf8;";
                st.executeUpdate(myQuery);                   
            }
            
            
            //########################  proveedor_tc_compraprod ##############
            myQuery = "SHOW TABLES LIKE 'proveedor_tc_compraprod'";
            rs=st.executeQuery(myQuery);
            if(rs.next()){
            }else{//no existe se crea
                myQuery = "CREATE TABLE proveedor_tc_compraprod (" +
                "  `Idcompra` int(11) NOT NULL auto_increment," +
                "  `idprod` int(11) default NULL," +
                "  `IdFolioCompra` int(255) default NULL," +
                "  `cantidad` float(8,2) default '0.00'," +
                "  `precio` double(8,2) default '0.00'," +
                "  `total` double(8,2) default '0.00'," +
                "  PRIMARY KEY  (`Idcompra`)" +
                ") ENGINE=MyISAM DEFAULT CHARSET=utf8;";
                st.executeUpdate(myQuery);                   
            }
            
            
            //########################  farmacia_to_lotes ##############
            myQuery = "SHOW TABLES LIKE 'farmacia_to_lotes'";
            rs=st.executeQuery(myQuery);
            if(rs.next()){
            }else{//no existe se crea
                myQuery = "CREATE TABLE farmacia_to_lotes (" +
                "  `Id_lotes` int(11) NOT NULL auto_increment," +
                "  `lote` varchar(45) default NULL," +
                "  `descripcion` varchar(90) default NULL," +
                "  `cantidad` int(5) default NULL," +
                "  `fecha` datetime default NULL," +
                "  `usuario_registro` varchar(70) default NULL," +
                "  `estatus` int(1) default '0'," +
                "  `usuario_elimino` varchar(70) default NULL," +
                "  `fecha_baja` datetime default NULL," +
                "  PRIMARY KEY  (`Id_lotes`)" +
                ") ENGINE=MyISAM DEFAULT CHARSET=utf8;";
                st.executeUpdate(myQuery);                   
            }
            
            System.out.println("FINALIZA VALIDACION DE TABLAS");
            
            
            
            
            
            //####### to_folios ##############   
            myQuery = "SHOW COLUMNS FROM to_folios LIKE 'Nofactura';";
            //System.out.println(""+myQuery);            
            rs=st.executeQuery(myQuery);            
            if(rs.next()){
            }else{//no existe se crea
                myQuery = "alter table to_folios add Nofactura varchar(55) default NULL";
                System.out.println(""+myQuery);
                st.executeUpdate(myQuery);
            }
            myQuery = "SHOW COLUMNS FROM to_folios LIKE 'cliente';";
            rs=st.executeQuery(myQuery);
            if(rs.next()){
            }else{//no existe se crea
                myQuery = "alter table to_folios add cliente int(11) default NULL;";
                System.out.println(""+myQuery);
                st.executeUpdate(myQuery);
            }
            myQuery = "SHOW COLUMNS FROM to_folios LIKE 'metodopagofactura';";
            rs=st.executeQuery(myQuery);
            if(rs.next()){
            }else{//no existe se crea
                myQuery = "alter table to_folios add metodopagofactura varchar(60) default NULL;";
                System.out.println(""+myQuery);
                st.executeUpdate(myQuery);
            }
            myQuery = "SHOW COLUMNS FROM to_folios LIKE 'usuario_venta';";
            rs=st.executeQuery(myQuery);
            if(rs.next()){
            }else{//no existe se crea
                myQuery = "alter table to_folios add usuario_venta varchar(170) default NULL;";
                System.out.println(""+myQuery);
                st.executeUpdate(myQuery);
            }
            myQuery = "SHOW COLUMNS FROM to_folios LIKE 'fecha_registro_venta';";
            rs=st.executeQuery(myQuery);
            if(rs.next()){
            }else{//no existe se crea
                myQuery = "alter table to_folios add fecha_registro_venta datetime default NULL;";
                System.out.println(""+myQuery);
                st.executeUpdate(myQuery);
            }
            
            myQuery = "SHOW COLUMNS FROM to_folios LIKE 'ieps';";
            rs=st.executeQuery(myQuery);
            if(rs.next()){
            }else{//no existe se crea
                myQuery = "alter table to_folios add ieps float(8,2) null default 0;";
                System.out.println(""+myQuery);
                st.executeUpdate(myQuery);
            }            
            myQuery = "SHOW COLUMNS FROM to_folios LIKE 'mesa';";
            rs=st.executeQuery(myQuery);
            if(rs.next()){
            }else{//no existe se crea
                myQuery = "alter table to_folios add mesa int(11) null;";
                System.out.println(""+myQuery);
                st.executeUpdate(myQuery);
            }
            myQuery = "SHOW COLUMNS FROM to_folios LIKE 'mesero';";
            rs=st.executeQuery(myQuery);
            if(rs.next()){
            }else{//no existe se crea
                myQuery = "alter table to_folios add mesero int(11) null;";
                System.out.println(""+myQuery);
                st.executeUpdate(myQuery);
            }            
            myQuery = "SHOW COLUMNS FROM to_folios LIKE 'membresia';";//7 dic 2017
            rs=st.executeQuery(myQuery);
            if(rs.next()){
            }else{//no existe se crea
                myQuery = "alter table to_folios add membresia varchar(30) null;";
                System.out.println(""+myQuery);
                st.executeUpdate(myQuery);
            }
            myQuery = "SHOW COLUMNS FROM to_folios LIKE 'numero_receta';";//7 dic 2017
            rs=st.executeQuery(myQuery);
            if(rs.next()){
            }else{//no existe se crea
                myQuery = "alter table to_folios add numero_receta varchar(30) null;";
                System.out.println(""+myQuery);
                st.executeUpdate(myQuery);
            }
            myQuery = "SHOW COLUMNS FROM to_folios LIKE 'medico';";  //7 dic 2017
            rs=st.executeQuery(myQuery);
            if(rs.next()){
            }else{//no existe se crea
                myQuery = "alter table to_folios add medico varchar(80) null;";
                System.out.println(""+myQuery);
                st.executeUpdate(myQuery);
            }
            myQuery = "SHOW COLUMNS FROM to_folios LIKE 'diferenciadescuento';";  //7 dic 2017
            rs=st.executeQuery(myQuery);
            if(rs.next()){
            }else{//no existe se crea
                myQuery = "alter table to_folios add diferenciadescuento double(5,2) null default 0.00;";
                System.out.println(""+myQuery);
                st.executeUpdate(myQuery);
            }
            
            
            
            
            
            
            
            
            //#############  to_ventas ##############            
            myQuery = "SHOW COLUMNS FROM to_ventas LIKE 'ieps';";
            rs=st.executeQuery(myQuery);
            if(rs.next()){
            }else{//no existe se crea
                myQuery = "alter table to_ventas add ieps float(8,2) null default 0;";
                System.out.println(""+myQuery);
                st.executeUpdate(myQuery);
            }
            myQuery = "SHOW COLUMNS FROM to_ventas LIKE 'descuento';";
            rs=st.executeQuery(myQuery);
            if(rs.next()){
            }else{//no existe se crea
                myQuery = "alter table to_ventas add descuento float(8,2) null default 0;";
                System.out.println(""+myQuery);
                st.executeUpdate(myQuery);
            }
            
            myQuery = "SHOW COLUMNS FROM to_ventas LIKE 'utilidad';";
            rs=st.executeQuery(myQuery);
            if(rs.next()){
            }else{//no existe se crea
                myQuery = "alter table to_ventas add utilidad float(6,2) null default 0;";
                System.out.println(""+myQuery);
                st.executeUpdate(myQuery);
            }
            
            myQuery = "SHOW COLUMNS FROM to_ventas LIKE 'idr_lote';";
            rs=st.executeQuery(myQuery);
            if(rs.next()){
            }else{//no existe se crea
                myQuery = "alter table to_ventas add idr_lote int(7) null default 0;";
                System.out.println(""+myQuery);
                st.executeUpdate(myQuery);
            }
            myQuery = "SHOW COLUMNS FROM to_ventas LIKE 'antibiotico';";
            rs=st.executeQuery(myQuery);
            if(rs.next()){
            }else{//no existe se crea
                myQuery = "alter table to_ventas add antibiotico int(1) null default 0 COMMENT '0.-NO   1-SI  ESTO ES PARA FARMACIA';";
                System.out.println(""+myQuery);
                st.executeUpdate(myQuery);
            }
            
            
            
            
            //################### privilegios ##############
            myQuery = "SHOW COLUMNS FROM privilegios LIKE 'facturacion';";
            rs=st.executeQuery(myQuery);
            if(rs.next()){
            }else{//no existe se crea
                myQuery = "alter table privilegios add facturacion int(1) null default 0;";
                System.out.println(""+myQuery);
                st.executeUpdate(myQuery);
            }
            myQuery = "SHOW COLUMNS FROM privilegios LIKE 'veterinaria';";
            rs=st.executeQuery(myQuery);
            if(rs.next()){
            }else{//no existe se crea
                myQuery = "alter table privilegios add veterinaria int(1) null default 0;";
                System.out.println(""+myQuery);
                st.executeUpdate(myQuery);
            }
            myQuery = "SHOW COLUMNS FROM privilegios LIKE 'restaurant';";
            rs=st.executeQuery(myQuery);
            if(rs.next()){
            }else{//no existe se crea
                myQuery = "alter table privilegios add restaurant int(1) null default 0;";
                System.out.println(""+myQuery);
                st.executeUpdate(myQuery);
            }
            myQuery = "SHOW COLUMNS FROM privilegios LIKE 'restaurant';";
            rs=st.executeQuery(myQuery);
            if(rs.next()){
            }else{//no existe se crea
                myQuery = "alter table privilegios add restaurant int(1) null default 0;";
                System.out.println(""+myQuery);
                st.executeUpdate(myQuery);
            }            
            myQuery = "SHOW COLUMNS FROM privilegios LIKE 'notacredito';";
            rs=st.executeQuery(myQuery);
            if(rs.next()){
            }else{//no existe se crea
                myQuery = "alter table privilegios add notacredito int(1) null default 0;";
                System.out.println(""+myQuery);
                st.executeUpdate(myQuery);
            }
            myQuery = "SHOW COLUMNS FROM privilegios LIKE 'serviciotecnico';";
            rs=st.executeQuery(myQuery);
            if(rs.next()){
            }else{//no existe se crea
                myQuery = "alter table privilegios add serviciotecnico int(1) null default 0;";
                System.out.println(""+myQuery);
                st.executeUpdate(myQuery);
            }
            myQuery = "SHOW COLUMNS FROM privilegios LIKE 'farmacia';";
            rs=st.executeQuery(myQuery);
            if(rs.next()){
            }else{//no existe se crea
                myQuery = "alter table privilegios add farmacia int(1) null default 0;";
                System.out.println(""+myQuery);
                st.executeUpdate(myQuery);
            }
            myQuery = "SHOW COLUMNS FROM privilegios LIKE 'fidelizaciones';";
            rs=st.executeQuery(myQuery);
            if(rs.next()){
            }else{//no existe se crea
                myQuery = "alter table privilegios add fidelizaciones int(1) null default 0;";
                System.out.println(""+myQuery);
                st.executeUpdate(myQuery);
            }
            
            myQuery = "SHOW COLUMNS FROM privilegios LIKE 'ocultar_campos_venta';";
            rs=st.executeQuery(myQuery);
            if(rs.next()){
            }else{//no existe se crea
                myQuery = "alter table privilegios add ocultar_campos_venta int(1) null default 0;";
                System.out.println(""+myQuery);
                st.executeUpdate(myQuery);
            }
            
            
            
            
            
            
            
            //################# to_cierre_caja #################
            myQuery = "SHOW COLUMNS FROM to_cierre_caja LIKE 'credito';";
            rs=st.executeQuery(myQuery);
            if(rs.next()){
            }else{//no existe se crea
                myQuery = "alter table to_cierre_caja add credito float(8,2) null default 0;";
                System.out.println(""+myQuery);
                st.executeUpdate(myQuery);
            }
            myQuery = "SHOW COLUMNS FROM to_cierre_caja LIKE 'compras';";
            rs=st.executeQuery(myQuery);
            if(rs.next()){
            }else{//no existe se crea
                myQuery = "alter table to_cierre_caja add compras float(8,2) null default 0;";
                System.out.println(""+myQuery);
                st.executeUpdate(myQuery);
            }
            myQuery = "SHOW COLUMNS FROM to_cierre_caja LIKE 'caja';";
            rs=st.executeQuery(myQuery);
            if(rs.next()){
            }else{//no existe se crea
                myQuery = "alter table to_cierre_caja add caja varchar(20) null;";
                System.out.println(""+myQuery);
                st.executeUpdate(myQuery);
            }
            
            
            
            
            
            
            
            //##############   to_datos_facturacion ###############
            myQuery = "SHOW COLUMNS FROM to_datos_facturacion LIKE 'RegimenFiscal';";
            rs=st.executeQuery(myQuery);
            if(rs.next()){
            }else{//no existe se crea
                myQuery = "alter table to_datos_facturacion add RegimenFiscal varchar(15) null;";
                System.out.println(""+myQuery);
                st.executeUpdate(myQuery);
            }
            
            
            
            
            
            
            
            
            
            //############  tc_productos  ################## 
            myQuery = "SHOW COLUMNS FROM tc_productos LIKE 'idrcategoria';";
            rs=st.executeQuery(myQuery);
            if(rs.next()){
            }else{//no existe se crea
                myQuery = "alter table tc_productos add idrcategoria int(4) null;";
                System.out.println(""+myQuery);
                st.executeUpdate(myQuery);
            }
            myQuery = "SHOW COLUMNS FROM tc_productos LIKE 'precio_mayoreo';";
            rs=st.executeQuery(myQuery);
            if(rs.next()){
            }else{//no existe se crea
                myQuery = "alter table tc_productos add precio_mayoreo float(9,2) null default 0;";
                System.out.println(""+myQuery);
                st.executeUpdate(myQuery);
            }
            myQuery = "SHOW COLUMNS FROM tc_productos LIKE 'cantidad_mayoreo';";
            rs=st.executeQuery(myQuery);
            if(rs.next()){
            }else{//no existe se crea
                myQuery = "alter table tc_productos add cantidad_mayoreo int(6) null default 0;";
                System.out.println(""+myQuery);
                st.executeUpdate(myQuery);
            }
            myQuery = "SHOW COLUMNS FROM tc_productos LIKE 'precio_promocion';";
            rs=st.executeQuery(myQuery);
            if(rs.next()){
            }else{//no existe se crea
                myQuery = "alter table tc_productos add precio_promocion float(8,2) null default 0;";
                System.out.println(""+myQuery);
                st.executeUpdate(myQuery);
            }
            myQuery = "SHOW COLUMNS FROM tc_productos LIKE 'cantidad_promocion';";
            rs=st.executeQuery(myQuery);
            if(rs.next()){
            }else{//no existe se crea
                myQuery = "alter table tc_productos add cantidad_promocion int(6) null default 0;";
                System.out.println(""+myQuery);
                st.executeUpdate(myQuery);
            }
            myQuery = "SHOW COLUMNS FROM tc_productos LIKE 'agranel';";
            rs=st.executeQuery(myQuery);
            if(rs.next()){
            }else{//no existe se crea
                myQuery = "alter table tc_productos add agranel varchar(10) null default 'NO';";
                System.out.println(""+myQuery);
                st.executeUpdate(myQuery);
            }
            myQuery = "SHOW COLUMNS FROM tc_productos LIKE 'ieps';";
            rs=st.executeQuery(myQuery);
            if(rs.next()){
            }else{//no existe se crea
                myQuery = "alter table tc_productos add ieps float(8,2) null default 0;";
                System.out.println(""+myQuery);
                st.executeUpdate(myQuery);
            }
            myQuery = "SHOW COLUMNS FROM tc_productos LIKE 'prodcompuesto';";
            rs=st.executeQuery(myQuery);
            if(rs.next()){
            }else{//no existe se crea
                myQuery = "alter table tc_productos add prodcompuesto varchar(10) null default 'NO';";
                System.out.println(""+myQuery);
                st.executeUpdate(myQuery);
            }
            myQuery = "SHOW COLUMNS FROM tc_productos LIKE 'unidad';";
            rs=st.executeQuery(myQuery);
            if(rs.next()){
            }else{//no existe se crea
                myQuery = "alter table tc_productos add unidad varchar(35) null;";
                System.out.println(""+myQuery);
                st.executeUpdate(myQuery);
            }            
            myQuery = "SHOW COLUMNS FROM tc_productos LIKE 'campo1';";
            rs=st.executeQuery(myQuery);
            if(rs.next()){
            }else{//no existe se crea
                myQuery = "alter table tc_productos add campo1 varchar(80) null;";
                System.out.println(""+myQuery);
                st.executeUpdate(myQuery);
            }
            myQuery = "SHOW COLUMNS FROM tc_productos LIKE 'campo2';";
            rs=st.executeQuery(myQuery);
            if(rs.next()){
            }else{//no existe se crea
                myQuery = "alter table tc_productos add campo2 varchar(80) null;";
                System.out.println(""+myQuery);
                st.executeUpdate(myQuery);
            }
            myQuery = "SHOW COLUMNS FROM tc_productos LIKE 'idr_concep_sat';";
            rs=st.executeQuery(myQuery);
            if(rs.next()){
            }else{//no existe se crea
                myQuery = "alter table tc_productos add idr_concep_sat int(5) null;";
                System.out.println(""+myQuery);
                st.executeUpdate(myQuery);
            }
            
            
            //############  rest_temp_venta  ################
            myQuery = "SHOW COLUMNS FROM rest_temp_venta LIKE 'observacion';";
            rs=st.executeQuery(myQuery);
            if(rs.next()){
            }else{//no existe se crea
                myQuery = "alter table rest_temp_venta add observacion varchar(150) null;";
                System.out.println(""+myQuery);
                st.executeUpdate(myQuery);
            }
            
            
            
            //############  to_facturas  ################
            myQuery = "SHOW COLUMNS FROM to_facturas LIKE 'uso_cfdi';";
            rs=st.executeQuery(myQuery);
            if(rs.next()){
            }else{//no existe se crea
                myQuery = "alter table to_facturas add uso_cfdi varchar(15) null;";
                System.out.println(""+myQuery);
                st.executeUpdate(myQuery);
            }
            
             
             
             
             
            //############  to_parametros  ################
            myQuery = "select * FROM to_parametros where clave='campo1'";
            rs=st.executeQuery(myQuery);
            if(rs.next()){
            }else{//no existe se crea
                myQuery = "insert into to_parametros (clave,descripcion,parametro) values ('campo1','campo configurable','Campo1:')";
                System.out.println(""+myQuery);
                st.executeUpdate(myQuery);
            }
            myQuery = "select * FROM to_parametros where clave='campo2'";
            rs=st.executeQuery(myQuery);
            if(rs.next()){
            }else{//no existe se crea
                myQuery = "insert into to_parametros (clave,descripcion,parametro) values ('campo2','campo2 configurable','Campo2:')";
                System.out.println(""+myQuery);
                st.executeUpdate(myQuery);
            }
            myQuery = "select * FROM to_parametros where clave='FIDELIZACIONBD'";
            rs=st.executeQuery(myQuery);
            if(rs.next()){
            }else{//no existe se crea
                myQuery = "insert into to_parametros (clave,descripcion,parametro) values ('FIDELIZACIONBD','base de datos fidelizaciones','')";
                System.out.println(""+myQuery);
                st.executeUpdate(myQuery);
            }
            myQuery = "select * FROM to_parametros where clave='FIDELIZACIONUSER'";
            rs=st.executeQuery(myQuery);
            if(rs.next()){
            }else{//no existe se crea
                myQuery = "insert into to_parametros (clave,descripcion,parametro) values ('FIDELIZACIONUSER','usuario de base de datos fidelizaciones','')";
                System.out.println(""+myQuery);
                st.executeUpdate(myQuery);
            }
            myQuery = "select * FROM to_parametros where clave='FIDELIZACIONPASS'";
            rs=st.executeQuery(myQuery);
            if(rs.next()){
            }else{//no existe se crea
                myQuery = "insert into to_parametros (clave,descripcion,parametro) values ('FIDELIZACIONPASS','password de base de datos fidelizaciones','')";
                System.out.println(""+myQuery);
                st.executeUpdate(myQuery);
            }
            myQuery = "select * FROM to_parametros where clave='FIDELIZACIONSERVER'";
            rs=st.executeQuery(myQuery);
            if(rs.next()){
            }else{//no existe se crea
                myQuery = "insert into to_parametros (clave,descripcion,parametro) values ('FIDELIZACIONSERVER','server de base de datos fidelizaciones','')";
                System.out.println(""+myQuery);
                st.executeUpdate(myQuery);
            }
            myQuery = "select * FROM to_parametros where clave='BASCULA'";
            rs=st.executeQuery(myQuery);
            if(rs.next()){
            }else{//no existe se crea
                myQuery = "insert into to_parametros (clave,descripcion,parametro) values ('BASCULA','SI/NO  BASCULAS METROLOGY','NO')";
                System.out.println(""+myQuery);
                st.executeUpdate(myQuery);
            }
            myQuery = "select * FROM to_parametros where clave='PUERTOBASCULA'";
            rs=st.executeQuery(myQuery);
            if(rs.next()){
            }else{//no existe se crea
                myQuery = "insert into to_parametros (clave,descripcion,parametro) values ('PUERTOBASCULA','COM4,COM5,COM6,COM7,COM8','COM4')";
                System.out.println(""+myQuery);
                st.executeUpdate(myQuery);
            }
            myQuery = "select * FROM to_parametros where clave='IMPPVT'";
            rs=st.executeQuery(myQuery);
            if(rs.next()){
            }else{//no existe se crea
                myQuery = "insert into to_parametros (clave,descripcion,parametro) values ('IMPPVT','IMPRESORA PARA ENVIAR EN AUTOMATICO SOLO PUNTO VENTA','')";
                System.out.println(""+myQuery);
                st.executeUpdate(myQuery);
            }
            myQuery = "select * FROM to_parametros where clave='IMPREST'";
            rs=st.executeQuery(myQuery);
            if(rs.next()){
            }else{//no existe se crea
                myQuery = "insert into to_parametros (clave,descripcion,parametro) values ('IMPREST','IMPRESORA DEFECTO RESTAURANT','')";
                System.out.println(""+myQuery);
                st.executeUpdate(myQuery);
            }
            myQuery = "select * FROM to_parametros where clave='IMPCOMANDA'";
            rs=st.executeQuery(myQuery);
            if(rs.next()){
            }else{//no existe se crea
                myQuery = "insert into to_parametros (clave,descripcion,parametro) values ('IMPCOMANDA','IMPRESION A IMPRESORA DE COMANDAS','')";
                System.out.println(""+myQuery);
                st.executeUpdate(myQuery);
            }
            myQuery = "select * FROM to_parametros where clave='TICKETLOGO'";
            rs=st.executeQuery(myQuery);
            if(rs.next()){
            }else{//no existe se crea
                myQuery = "insert into to_parametros (clave,descripcion,parametro) values ('TICKETLOGO','IMPRIMIR EL TICKET CON LOGO  SI/NO','NO')";
                System.out.println(""+myQuery);
                st.executeUpdate(myQuery);
            }
            myQuery = "select * FROM to_parametros where clave='TAMANOTICKET'";
            rs=st.executeQuery(myQuery);
            if(rs.next()){
            }else{//no existe se crea
                myQuery = "insert into to_parametros (clave,descripcion,parametro) values ('TAMANOTICKET','TAMAÑO DEL TICKET 58/80 milimetros','58')";
                System.out.println(""+myQuery);
                st.executeUpdate(myQuery);
            }
            myQuery = "select * FROM to_parametros where clave='INVENTARIOFISICO'";
            rs=st.executeQuery(myQuery);
            if(rs.next()){
            }else{//no existe se crea
                myQuery = "insert into to_parametros (clave,descripcion,parametro) values ('INVENTARIOFISICO','SE ESTA EJECUTANDO EL INVENTARIO FISICO SI/NO','NO')";
                System.out.println(""+myQuery);
                st.executeUpdate(myQuery);
            }
            myQuery = "select * FROM to_parametros where clave='SMARTWEBUSER'";
            rs=st.executeQuery(myQuery);
            if(rs.next()){
            }else{//no existe se crea
                myQuery = "insert into to_parametros (clave,descripcion,parametro) values ('SMARTWEBUSER','usuario facturacion smartweb','')";
                System.out.println(""+myQuery);
                st.executeUpdate(myQuery);
            }
            myQuery = "select * FROM to_parametros where clave='SMARTWEBCONTRA'";
            rs=st.executeQuery(myQuery);
            if(rs.next()){
            }else{//no existe se crea
                myQuery = "insert into to_parametros (clave,descripcion,parametro) values ('SMARTWEBCONTRA','contraseña para facturacion smartweb','')";
                System.out.println(""+myQuery);
                st.executeUpdate(myQuery);
            }
            
            
            
            
            
            
            System.out.println("FINALIZA VALIDACION DE CAMPOS EN TABLAS");
            //########$%&/()=(/&%#$$$$$%&/(/)(=()/(&/%&$%#$##################
            
            
            
            
            
            
            
            
            
            
            
            JOptionPane.showMessageDialog(null, "Se realizo la verificación de la base de datos", "Check OK", JOptionPane.INFORMATION_MESSAGE);
            rs.close();
            st.close();
            con.desconectar();           
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Hubo un error en la validacion de la BD: "+ex, "Error verificacion BD", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        conex con=new conex();
        try {
            Statement st = con.getConnection().createStatement();
            String myQuery = "update to_parametros set parametro='"+txtusuariofactura.getText().trim()+"' where clave='SMARTWEBUSER'";                
            st.executeUpdate(myQuery);
            myQuery = "update to_parametros set parametro='"+txtcontrafactura.getText().trim()+"' where clave='SMARTWEBCONTRA'";                
            st.executeUpdate(myQuery);
            st.close();
            con.desconectar();   
            JOptionPane.showMessageDialog(null, "Los datos de factura se guardaron correctamente.", "Error verificacion BD", JOptionPane.INFORMATION_MESSAGE);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Hubo un error en la validacion de la BD: "+ex, "Error verificacion BD", JOptionPane.ERROR_MESSAGE);
        }
        
        
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ComprobarBD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ComprobarBD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ComprobarBD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ComprobarBD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ComprobarBD().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtcontrafactura;
    private javax.swing.JTextField txtusuariofactura;
    // End of variables declaration//GEN-END:variables
}
